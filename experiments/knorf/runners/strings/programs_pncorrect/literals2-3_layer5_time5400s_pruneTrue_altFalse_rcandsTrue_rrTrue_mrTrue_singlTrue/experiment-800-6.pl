
:-['../playgol'].
:-['string-bk'].
:-['../metagol'].

:-['./programs_pncorrect/literals2-3_layer5_time5400s_pruneTrue_altFalse_rcandsTrue_rrTrue_mrTrue_singlTrue/refactored_primitives-800-6.pl'].



:- use_module(library(time)).

play_time_interval(2).
max_build_time(60).
max_play_depth(4).
max_build_depth(5).
cpus(4).

metagol:functional.
%% metagol:max_clauses(10).

func_test([P,s(In,Out1),s(_,[])],PS,G):-
  \+ (metagol :prove_deduce([[P,s(In,Out2),s(_,[])]],PS,G),Out1\= Out2).



%% tell metagol to use the BK
prim(is_empty/1).
prim(not_empty/1). % maybe?

prim(is_space/1).
prim(not_space/1). % maybe?

prim(is_uppercase/1).
prim(is_lowercase/1).

prim(is_letter/1).
prim(not_letter/1).

prim(is_number/1).
prim(not_number/1).

prim(copy1/2).
prim(skip1/2).
prim(mk_uppercase/2).
prim(mk_lowercase/2).
%% prim(write1/3).

prim(latent174_2/2).
prim(latent287_2/2).
prim(latent261_2/2).
prim(latent320_2/2).
prim(latent1465_2/2).
prim(latent1996_3/2).
prim(latent45_2/2).
prim(latent484_2/2).
prim(latent49_3/2).
prim(latent62_3/2).
prim(latent1624_2/2).
prim(latent69_3/2).
prim(latent246_2/2).
prim(latent518_3/2).
prim(latent606_2/2).
prim(latent234_2/2).
prim(latent2541_3/2).
prim(latent1955_3/2).
prim(latent7_2/2).
prim(latent14_2/2).
prim(latent88_3/2).
prim(latent1763_3/2).
prim(latent371_3/2).
prim(latent343_2/2).
prim(latent1795_3/2).
prim(latent391_2/2).
prim(latent1275_2/2).
prim(latent1871_3/2).
prim(latent460_2/2).
prim(latent585_2/2).
prim(latent976_3/2).
prim(latent8_2/2).
prim(latent55_3/2).
prim(latent63_3/2).
prim(latent72_2/2).
prim(latent437_2/2).
prim(latent18_3/2).
prim(latent98_2/2).
prim(latent120_2/2).
prim(latent116_2/2).
prim(latent1968_3/2).
prim(latent227_2/2).
prim(latent1176_2/2).
prim(latent30_2/2).
prim(latent312_2/2).
prim(latent260_2/2).
prim(latent242_2/2).
prim(latent282_2/2).
prim(latent365_2/2).
prim(latent1328_2/2).
prim(latent956_3/2).
prim(latent110_2/2).
prim(latent999_2/2).
prim(latent12_2/2).
prim(latent1020_2/2).
prim(latent38_3/2).
prim(latent2460_2/2).
prim(latent22_3/2).
prim(latent263_2/2).
prim(latent566_3/2).
prim(latent53_3/2).
prim(latent228_2/2).
prim(latent953_3/2).
prim(latent1814_3/2).
prim(latent10_2/2).
prim(latent2036_3/2).
prim(latent64_3/2).
prim(latent232_2/2).
prim(latent202_2/2).
prim(latent223_2/2).
prim(latent2135_2/2).
prim(latent380_2/2).
prim(latent458_2/2).
prim(latent213_2/2).
prim(latent20_3/2).
prim(latent236_2/2).
prim(latent146_2/2).
prim(latent346_2/2).
prim(latent418_2/2).
prim(latent1318_2/2).
prim(latent1088_2/2).
prim(latent1764_3/2).
prim(latent383_2/2).
prim(latent21_3/2).
prim(latent642_2/2).
prim(latent2229_2/2).
prim(latent85/2).
prim(latent32_3/2).
prim(latent1928_3/2).
prim(latent221_2/2).
prim(latent196_2/2).
prim(latent19_3/2).
prim(latent1644_2/2).
prim(latent377_2/2).
prim(latent1741_2/2).
prim(latent438_2/2).
prim(latent1976_3/2).
prim(latent425_2/2).
prim(latent1827_3/2).
prim(latent1834_3/2).
prim(latent1966_3/2).
prim(latent1988_3/2).
prim(latent616_2/2).
prim(latent501_2/2).
prim(latent311_2/2).
prim(latent1863_3/2).
prim(latent44_3/2).
prim(latent451_2/2).
prim(latent1891_3/2).
prim(latent84_2/2).
prim(latent667_3/2).
prim(latent48_3/2).
prim(latent367_2/2).
prim(latent43_3/2).
prim(latent866_3/2).
prim(latent1508_2/2).
prim(latent73_2/2).
prim(latent1105_2/2).
prim(latent219_2/2).
prim(latent172_2/2).
prim(latent1481_3/2).
prim(latent447_3/2).
prim(latent1224_3/2).
prim(latent11_2/2).
prim(latent262_2/2).
prim(latent94/2).
prim(latent114_2/2).
prim(latent2_2/2).
prim(latent469_2/2).
prim(latent1413_3/2).
prim(latent4/2).
prim(latent231_2/2).
prim(latent427_2/2).
prim(latent1750_3/2).
prim(latent24_3/2).
prim(latent899_2/2).
prim(latent224_2/2).
prim(latent837_3/2).
prim(latent156_2/2).
prim(latent1978_3/2).
prim(latent331_2/2).
prim(latent1/2).
prim(latent65_3/2).
prim(latent1486_2/2).
prim(latent1575_2/2).
prim(latent1566_2/2).
prim(latent1847_3/2).
prim(latent3/2).
prim(latent1218_3/2).
prim(latent717_2/2).
prim(latent1911_3/2).
prim(latent445_2/2).
prim(latent286_3/2).
prim(latent1622_2/2).
prim(latent2306_2/2).
prim(latent270_2/2).
prim(latent1934_3/2).
prim(latent1028_3/2).
prim(latent1780_3/2).
prim(latent423_2/2).
prim(latent929_2/2).
prim(latent705_2/2).
prim(latent1822_3/2).
prim(latent170_2/2).
prim(latent2179_2/2).
prim(latent56_3/2).
prim(latent143_2/2).
prim(latent1145_2/2).
prim(latent158_2/2).
prim(latent34_3/2).
prim(latent1233_2/2).
prim(latent1788_3/2).
prim(latent475_3/2).
prim(latent51_3/2).
prim(latent28_3/2).
prim(latent1926_3/2).
prim(latent1876_3/2).
prim(latent251_2/2).
prim(latent1819_3/2).
prim(latent1583_2/2).
prim(latent1883_3/2).
prim(latent50_3/2).
prim(latent366_2/2).
prim(latent1263_2/2).
prim(latent2321_2/2).
prim(latent787_3/2).
prim(latent2191_2/2).
prim(latent1947_3/2).
prim(latent66_3/2).
prim(latent74_3/2).
prim(latent13_2/2).
prim(latent1836_3/2).
prim(latent2408_2/2).
prim(latent1113_2/2).
prim(latent106/2).
prim(latent57_3/2).
prim(latent1707_2/2).
prim(latent551_2/2).
prim(latent241_2/2).
prim(latent225_2/2).
prim(latent1894_3/2).
prim(latent388_2/2).
prim(latent115_2/2).
prim(latent370_2/2).
prim(latent222_2/2).
prim(latent1616_3/2).
prim(latent154_2/2).
prim(latent301_2/2).
prim(latent131_2/2).
prim(latent111_2/2).
prim(latent1855_3/2).
prim(latent842_2/2).
prim(latent25_2/2).
prim(latent119_2/2).
prim(latent797_2/2).
prim(latent108_3/2).
prim(latent240_2/2).
prim(latent387_2/2).
prim(latent60_3/2).
prim(latent67_3/2).
prim(latent342_2/2).
prim(latent2608_3/2).
prim(latent237_2/2).
prim(latent2461_2/2).
prim(latent29_2/2).
prim(latent607_3/2).
prim(latent619_2/2).
prim(latent791_2/2).
prim(latent186_2/2).
prim(latent419_2/2).
prim(latent1082_2/2).
prim(latent966_2/2).
prim(latent1549_3/2).
prim(latent2640_3/2).
prim(latent112_2/2).
prim(latent256_2/2).
prim(latent103_2/2).
prim(latent239_2/2).
prim(latent6/2).
prim(latent557_2/2).
prim(latent873_2/2).
prim(latent16_2/2).
prim(latent1828_3/2).
prim(latent2276_2/2).
prim(latent23_3/2).
prim(latent1957_3/2).
prim(latent137_2/2).
prim(latent274_2/2).
prim(latent466_2/2).
prim(latent1006_3/2).
prim(latent75_3/2).
prim(latent9_2/2).
prim(latent188_2/2).
prim(latent316_2/2).
prim(latent1728_3/2).
prim(latent117/2).
prim(latent31_3/2).
prim(latent42_3/2).
prim(latent5_2/2).
prim(latent280_2/2).
prim(latent273_2/2).
prim(latent1773_3/2).
prim(latent265_2/2).
prim(latent1859_3/2).
prim(latent333_2/2).
prim(latent649_2/2).
prim(latent220_2/2).
prim(latent1062_2/2).
prim(latent40_3/2).
prim(latent254_2/2).
prim(latent390_2/2).
prim(latent229_2/2).
prim(latent374_2/2).
prim(latent68_3/2).
prim(latent2625_3/2).
prim(latent15_2/2).
prim(latent1656_2/2).
prim(latent27_3/2).
prim(latent37_3/2).
prim(latent2153_2/2).
prim(latent47_3/2).
prim(p3/2).
prim(p5/2).
prim(p6/2).
prim(p8/2).
prim(p13/2).
prim(p26/2).
prim(p29/2).
prim(p39/2).
prim(p64/2).
prim(p65/2).
prim(p69/2).
prim(p81/2).
prim(p94/2).
prim(p349/2).
prim(p364/2).
prim(p2/2).
prim(p14/2).
prim(p14/2).
prim(p17/2).
prim(p17/2).
prim(p50/2).
prim(p95/2).
prim(p99/2).
prim(p127/2).
prim(p168/2).
prim(p206/2).
prim(p311/2).
prim(p311/2).
prim(p314/2).
prim(p314/2).
prim(p333/2).
prim(p348/2).
prim(p372/2).
prim(p375/2).
prim(p375/2).
prim(p380/2).
prim(p385/2).
prim(p385/2).
prim(p389/2).
prim(p392/2).
prim(p392/2).
prim(p396/2).
prim(p407/2).
prim(p408/2).
prim(p414/2).
prim(p414/2).
prim(p418/2).
prim(p418/2).
prim(p441/2).
prim(p485/2).
prim(p487/2).
prim(p487/2).
prim(p490/2).
prim(p490/2).
prim(p498/2).
prim(p507/2).
prim(p516/2).
prim(p545/2).
prim(p545/2).
prim(p546/2).
prim(p627/2).
prim(p628/2).
prim(p713/2).
prim(p713/2).
prim(p714/2).
prim(p714/2).
prim(p723/2).
prim(p753/2).
prim(p764/2).
prim(p774/2).
prim(p794/2).
prim(p794/2).
prim(p796/2).
prim(p796/2).
prim(p87/2).
prim(p121/2).
prim(p178/2).
prim(p241/2).
prim(p304/2).
prim(p365/2).
prim(p434/2).
prim(p434/2).
prim(p534/2).
prim(p560/2).
prim(p565/2).
prim(p674/2).
prim(p12/2).
prim(p24/2).
prim(p25/2).
prim(p40/2).
prim(p44/2).
prim(p45/2).
prim(p54/2).
prim(p60/2).
prim(p79/2).
prim(p110/2).
prim(p133/2).
prim(p141/2).
prim(p150/2).
prim(p169/2).
prim(p185/2).
prim(p204/2).
prim(p211/2).
prim(p242/2).
prim(p258/2).
prim(p272/2).
prim(p283/2).
prim(p288/2).
prim(p293/2).
prim(p371/2).
prim(p405/2).
prim(p473/2).
prim(p509/2).
prim(p511/2).
prim(p561/2).
prim(p668/2).
prim(p680/2).
prim(p734/2).
prim(p701/2).
prim(p793/2).
prim(p21/2).
prim(p57/2).
prim(p73/2).
prim(p75/2).
prim(p82/2).
prim(p83/2).
prim(p89/2).
prim(p91/2).
prim(p98/2).
prim(p100/2).
prim(p105/2).
prim(p132/2).
prim(p163/2).
prim(p167/2).
prim(p172/2).
prim(p197/2).
prim(p205/2).
prim(p214/2).
prim(p219/2).
prim(p221/2).
prim(p227/2).
prim(p238/2).
prim(p254/2).
prim(p269/2).
prim(p277/2).
prim(p297/2).
prim(p330/2).
prim(p346/2).
prim(p347/2).
prim(p356/2).
prim(p357/2).
prim(p379/2).
prim(p399/2).
prim(p422/2).
prim(p436/2).
prim(p448/2).
prim(p477/2).
prim(p527/2).
prim(p558/2).
prim(p630/2).
prim(p645/2).
prim(p650/2).
prim(p656/2).
prim(p704/2).
prim(p719/2).
prim(p758/2).
prim(p778/2).
prim(p416/2).
prim(p253/2).
prim(p32/2).
prim(p35/2).
prim(p43/2).
prim(p53/2).
prim(p59/2).
prim(p59/2).
prim(p115/2).
prim(p116/2).
prim(p117/2).
prim(p128/2).
prim(p135/2).
prim(p135/2).
prim(p151/2).
prim(p160/2).
prim(p164/2).
prim(p186/2).
prim(p231/2).
prim(p256/2).
prim(p261/2).
prim(p275/2).
prim(p275/2).
prim(p285/2).
prim(p289/2).
prim(p315/2).
prim(p335/2).
prim(p394/2).
prim(p395/2).
prim(p411/2).
prim(p424/2).
prim(p424/2).
prim(p435/2).
prim(p470/2).
prim(p501/2).
prim(p515/2).
prim(p515/2).
prim(p552/2).
prim(p589/2).
prim(p589/2).
prim(p602/2).
prim(p629/2).
prim(p691/2).
prim(p692/2).
prim(p743/2).
prim(p744/2).
prim(p746/2).
prim(p748/2).
prim(p754/2).
prim(p775/2).
prim(p787/2).
prim(p787/2).
prim(p1/2).
prim(p4/2).
prim(p33/2).
prim(p62/2).
prim(p107/2).
prim(p109/2).
prim(p114/2).
prim(p143/2).
prim(p144/2).
prim(p144/2).
prim(p156/2).
prim(p171/2).
prim(p171/2).
prim(p203/2).
prim(p203/2).
prim(p266/2).
prim(p339/2).
prim(p459/2).
prim(p578/2).
prim(p579/2).
prim(p596/2).
prim(p596/2).
prim(p611/2).
prim(p620/2).
prim(p648/2).
prim(p648/2).
prim(p670/2).
prim(p682/2).
prim(p711/2).
prim(p711/2).
prim(p732/2).
prim(p752/2).
prim(p762/2).
prim(p428/2).
prim(p574/2).
prim(p7/2).
prim(p15/2).
prim(p28/2).
prim(p31/2).
prim(p42/2).
prim(p70/2).
prim(p93/2).
prim(p124/2).
prim(p139/2).
prim(p153/2).
prim(p161/2).
prim(p170/2).
prim(p188/2).
prim(p195/2).
prim(p210/2).
prim(p225/2).
prim(p228/2).
prim(p232/2).
prim(p234/2).
prim(p249/2).
prim(p267/2).
prim(p284/2).
prim(p313/2).
prim(p334/2).
prim(p360/2).
prim(p383/2).
prim(p384/2).
prim(p409/2).
prim(p415/2).
prim(p437/2).
prim(p458/2).
prim(p463/2).
prim(p475/2).
prim(p484/2).
prim(p519/2).
prim(p530/2).
prim(p539/2).
prim(p544/2).
prim(p547/2).
prim(p559/2).
prim(p572/2).
prim(p586/2).
prim(p587/2).
prim(p588/2).
prim(p607/2).
prim(p652/2).
prim(p667/2).
prim(p669/2).
prim(p671/2).
prim(p685/2).
prim(p688/2).
prim(p739/2).
prim(p765/2).
prim(p766/2).
prim(p799/2).
prim(p113/2).
prim(p201/2).
prim(p397/2).
prim(p443/2).
prim(p9/2).
prim(p9/2).
prim(p22/2).
prim(p47/2).
prim(p56/2).
prim(p76/2).
prim(p76/2).
prim(p78/2).
prim(p92/2).
prim(p102/2).
prim(p111/2).
prim(p152/2).
prim(p152/2).
prim(p152/2).
prim(p190/2).
prim(p196/2).
prim(p208/2).
prim(p226/2).
prim(p243/2).
prim(p245/2).
prim(p251/2).
prim(p282/2).
prim(p320/2).
prim(p325/2).
prim(p355/2).
prim(p368/2).
prim(p429/2).
prim(p447/2).
prim(p455/2).
prim(p462/2).
prim(p467/2).
prim(p493/2).
prim(p499/2).
prim(p531/2).
prim(p533/2).
prim(p537/2).
prim(p570/2).
prim(p571/2).
prim(p583/2).
prim(p600/2).
prim(p606/2).
prim(p614/2).
prim(p635/2).
prim(p638/2).
prim(p651/2).
prim(p664/2).
prim(p678/2).
prim(p687/2).
prim(p707/2).
prim(p717/2).
prim(p733/2).
prim(p741/2).
prim(p248/2).
prim(p310/2).
prim(p449/2).
prim(p698/2).
prim(p11/2).
prim(p20/2).
prim(p30/2).
prim(p67/2).
prim(p77/2).
prim(p84/2).
prim(p88/2).
prim(p106/2).
prim(p126/2).
prim(p134/2).
prim(p136/2).
prim(p136/2).
prim(p146/2).
prim(p192/2).
prim(p222/2).
prim(p223/2).
prim(p237/2).
prim(p276/2).
prim(p280/2).
prim(p281/2).
prim(p281/2).
prim(p300/2).
prim(p300/2).
prim(p336/2).
prim(p338/2).
prim(p351/2).
prim(p413/2).
prim(p442/2).
prim(p453/2).
prim(p456/2).
prim(p457/2).
prim(p471/2).
prim(p480/2).
prim(p481/2).
prim(p500/2).
prim(p505/2).
prim(p512/2).
prim(p532/2).
prim(p554/2).
prim(p562/2).
prim(p575/2).
prim(p616/2).
prim(p619/2).
prim(p624/2).
prim(p626/2).
prim(p642/2).
prim(p643/2).
prim(p644/2).
prim(p653/2).
prim(p655/2).
prim(p658/2).
prim(p696/2).
prim(p705/2).
prim(p712/2).
prim(p749/2).
prim(p769/2).
prim(p779/2).
prim(p779/2).
prim(p785/2).
prim(p788/2).
prim(p797/2).
prim(p71/2).
prim(p540/2).
prim(p16/2).
prim(p16/2).
prim(p37/2).
prim(p49/2).
prim(p52/2).
prim(p61/2).
prim(p122/2).
prim(p155/2).
prim(p173/2).
prim(p240/2).
prim(p244/2).
prim(p287/2).
prim(p302/2).
prim(p341/2).
prim(p374/2).
prim(p381/2).
prim(p465/2).
prim(p496/2).
prim(p582/2).
prim(p584/2).
prim(p594/2).
prim(p640/2).
prim(p684/2).
prim(p724/2).
prim(p725/2).
prim(p745/2).
prim(p760/2).
prim(p777/2).
prim(p781/2).
prim(p10/2).
prim(p166/2).
prim(p179/2).
prim(p215/2).
prim(p327/2).
prim(p524/2).
prim(p666/2).
prim(p440/2).
prim(p193/2).
prim(p193/2).
prim(p194/2).
prim(p194/2).
prim(p298/2).
prim(p298/2).
prim(p502/2).
prim(p502/2).
prim(p676/2).
prim(p676/2).
prim(p727/2).
prim(p727/2).
prim(p521/2).
prim(p521/2).

metarule(precon,[P/2,Q/1,R/2],([P,A,B]:-[[Q,A],[R,A,B]])).
metarule(postcon,[P/2,Q/2,R/1],([P,A,B]:-[[Q,A,B],[R,B]])).
metarule(chain,[P/2,Q/2,R/2],([P,A,B]:-[[Q,A,C],[R,C,B]])).
metarule(tailrec,[P/2,Q/2],([P,A,B]:-[[Q,A,C],[P,C,B]])).
%% metarule(curry3,[P/2,Q/3,C/0],([P,A,B]:-[[Q,A,B,C]])).

  
a:-
    cpus(CPU_COUNT),
    set_prolog_flag(cpu_count,CPU_COUNT),
    games(Games),
    playgol(Games),
    b,
    halt.

b:-
    cpus(CPU_COUNT),
    set_prolog_flag(cpu_count,CPU_COUNT),
    %get_time(T),
    %stamp_date_time(T, date(DY,DM,DD,TH,TM,TS,_,_,_), 'UTC'),
    %format('% started solving build tasks at ~w ~w ~w ~w:~w:~w\n', [DD, DM, DY, TH, TM, TS]),
    max_build_depth(BuildDepth),
    playgol:update_depth(BuildDepth),
    max_build_time(BuildTime),
    retractall(max_time(_)),
    assert(max_time(BuildTime)),
    tasks(Tasks),
    learn_tasks(Tasks,Progs),
    length(Progs,N),
    format('% num solved ~w\n',[N]),
    %get_time(T2),
    %stamp_date_time(T2, date(DY2,DM2,DD2,TH2,TM2,TS2,_,_,_), 'UTC'),
    %format('% finished solving build tasks at ~w ~w ~w ~w:~w:~w\n', [DD2, DM2, DY2, TH2, TM2, TS2]),
    halt.

learn_tasks(Tasks,Progs):-
    concurrent_maplist(learn_aux,Tasks,Xs),
    findall(true,member(true,Xs),Progs).

learn_aux(T,true):-
    train_examples(T,Pos,Neg),
    max_time(MaxTime),
    get_time(TTT),
    stamp_date_time(TTT, date(DY,DM,DD,TH,TM,TS,_,_,_), 'UTC'),
    format('% started solving build task at ~w ~w ~w ~w:~w:~w\n', [DD, DM, DY, TH, TM, TS]),
    catch(call_with_time_limit(MaxTime,learn(Pos,Neg,Prog)),time_limit_exceeded,(writeln('%timeout'),false)),!,
    get_time(TTT2),
    stamp_date_time(TTT2, date(DY2,DM2,DD2,TH2,TM2,TS2,_,_,_), 'UTC'),
    format('% finished solving build tasks at ~w ~w ~w ~w:~w:~w\n', [DD2, DM2, DY2, TH2, TM2, TS2]),
    pprint(Prog).
learn_aux(_,false).

do_test:-
    tasks(Tasks),
    maplist(do_test,Tasks),
    halt.

do_test(Task):-
    test_examples(Task,Pos),
    (current_predicate(Task/2) ->
        (
            format('%solved,~w,~w\n',[Task,1]),
            forall(member(X,Pos),(call(X) -> format('~w,~w\n',[1,1]); format('~w,~w\n',[1,0])))
        );
        (
            format('%solved,~w,~w\n',[Task,0]),
            forall(member(_,Pos),format('~w,~w\n',[0,0]))
        )).

gen_e(Task,Input,Output,Out):-
    Out=..[Task,s(Input,Output),s(_,[])].

play_examples(Task,Pos,[]):-
    findall(X,(play_pos(Task,A,B),gen_e(Task,A,B,X)),Pos1),
    sort_examples(Pos1,Pos).

train_examples(Task,Pos,[]):-
    findall(X,(build_pos(Task,A,B),gen_e(Task,A,B,X)),Pos1),
    sort_examples(Pos1,Pos).

test_examples(Task,Pos):-
    findall(X,(test_pos(Task,A,B),gen_e(Task,A,B,X)),Pos).

add_len(Atom,Len-Atom):-
    Atom=..[_Task,s(Input,_Output),s(_,[])],
    length(Input,Len).
remove_len(_-Atom,Atom).

sort_examples(L1,L2):-
  maplist(add_len,L1,L3),
  keysort(L3,L4),
  maplist(remove_len,L4,L2).

