
:-['../playgol'].
:-['string-bk'].
:-['../metagol'].

:-['./programs_pncorrect/literals2-3_layer3_time5400s_pruneTrue_altFalse_rcandsTrue_rrTrue_mrTrue_singlTrue/refactored_primitives-800-1.pl'].



:- use_module(library(time)).

play_time_interval(2).
max_build_time(60).
max_play_depth(4).
max_build_depth(5).
cpus(4).

metagol:functional.
%% metagol:max_clauses(10).

func_test([P,s(In,Out1),s(_,[])],PS,G):-
  \+ (metagol :prove_deduce([[P,s(In,Out2),s(_,[])]],PS,G),Out1\= Out2).



%% tell metagol to use the BK
prim(is_empty/1).
prim(not_empty/1). % maybe?

prim(is_space/1).
prim(not_space/1). % maybe?

prim(is_uppercase/1).
prim(is_lowercase/1).

prim(is_letter/1).
prim(not_letter/1).

prim(is_number/1).
prim(not_number/1).

prim(copy1/2).
prim(skip1/2).
prim(mk_uppercase/2).
prim(mk_lowercase/2).
%% prim(write1/3).

prim(latent129_2/2).
prim(latent1235_2/2).
prim(latent36_3/2).
prim(latent11_2/2).
prim(latent1971_3/2).
prim(latent398_2/2).
prim(latent138_2/2).
prim(latent106_3/2).
prim(latent83_2/2).
prim(latent139_2/2).
prim(latent304_2/2).
prim(latent2036_3/2).
prim(latent1014_3/2).
prim(latent430_2/2).
prim(latent136_2/2).
prim(latent1/2).
prim(latent441_2/2).
prim(latent278_2/2).
prim(latent1055_2/2).
prim(latent2267_2/2).
prim(latent1660_2/2).
prim(latent292_2/2).
prim(latent126_2/2).
prim(latent1592_3/2).
prim(latent887_2/2).
prim(latent64_3/2).
prim(latent374_2/2).
prim(latent449_2/2).
prim(latent1907_3/2).
prim(latent1301_3/2).
prim(latent627_2/2).
prim(latent163_2/2).
prim(latent1792_2/2).
prim(latent386_2/2).
prim(latent1210_2/2).
prim(latent44_3/2).
prim(latent1985_3/2).
prim(latent1161_2/2).
prim(latent31_3/2).
prim(latent109_3/2).
prim(latent1655_2/2).
prim(latent2532_2/2).
prim(latent6_2/2).
prim(latent2376_2/2).
prim(latent925_2/2).
prim(latent757_2/2).
prim(latent2029_3/2).
prim(latent3/2).
prim(latent2008_3/2).
prim(latent485_2/2).
prim(latent49_3/2).
prim(latent46_3/2).
prim(latent1638_3/2).
prim(latent355_3/2).
prim(latent359_2/2).
prim(latent196_2/2).
prim(latent113/2).
prim(latent2474_3/2).
prim(latent397_2/2).
prim(latent2023_3/2).
prim(latent1409_2/2).
prim(latent1724_2/2).
prim(latent1253_2/2).
prim(latent329_2/2).
prim(latent14_2/2).
prim(latent643_2/2).
prim(latent40_3/2).
prim(latent88_3/2).
prim(latent1997_3/2).
prim(latent60_3/2).
prim(latent618_2/2).
prim(latent80_3/2).
prim(latent128_2/2).
prim(latent1090_2/2).
prim(latent354_2/2).
prim(latent310_2/2).
prim(latent496_2/2).
prim(latent52_3/2).
prim(latent1323_2/2).
prim(latent2069_3/2).
prim(latent761_2/2).
prim(latent2555_2/2).
prim(latent144_2/2).
prim(latent28_2/2).
prim(latent1546_2/2).
prim(latent219_2/2).
prim(latent1926_3/2).
prim(latent193_2/2).
prim(latent19_3/2).
prim(latent66_3/2).
prim(latent15_2/2).
prim(latent203_2/2).
prim(latent87/2).
prim(latent107_3/2).
prim(latent2212_2/2).
prim(latent281_2/2).
prim(latent8_2/2).
prim(latent2283_2/2).
prim(latent65_3/2).
prim(latent70_3/2).
prim(latent112_2/2).
prim(latent1107_3/2).
prim(latent1192_3/2).
prim(latent228_2/2).
prim(latent135_2/2).
prim(latent186_2/2).
prim(latent308_2/2).
prim(latent301_2/2).
prim(latent336_2/2).
prim(latent1929_3/2).
prim(latent1476_3/2).
prim(latent1275_2/2).
prim(latent425_2/2).
prim(latent1905_3/2).
prim(latent300_2/2).
prim(latent479_2/2).
prim(latent750_3/2).
prim(latent415_2/2).
prim(latent2040_3/2).
prim(latent1432_2/2).
prim(latent965_3/2).
prim(latent1809_2/2).
prim(latent1148_3/2).
prim(latent2538_2/2).
prim(latent553_2/2).
prim(latent1701_2/2).
prim(latent190_2/2).
prim(latent9/2).
prim(latent1220_3/2).
prim(latent630_2/2).
prim(latent2026_3/2).
prim(latent157_2/2).
prim(latent133_2/2).
prim(latent316_2/2).
prim(latent1988_3/2).
prim(latent497_2/2).
prim(latent295_2/2).
prim(latent502_2/2).
prim(latent282_3/2).
prim(latent16_2/2).
prim(latent601_2/2).
prim(latent1249_2/2).
prim(latent339_2/2).
prim(latent335_2/2).
prim(latent1623_3/2).
prim(latent458_2/2).
prim(latent5_2/2).
prim(latent1912_3/2).
prim(latent1576_3/2).
prim(latent71_3/2).
prim(latent1955_3/2).
prim(latent2045_3/2).
prim(latent1938_3/2).
prim(latent332_2/2).
prim(latent45_3/2).
prim(latent279_2/2).
prim(latent75_3/2).
prim(latent39_3/2).
prim(latent422_2/2).
prim(latent43_3/2).
prim(latent35_3/2).
prim(latent382_2/2).
prim(latent504_2/2).
prim(latent363_3/2).
prim(latent2015_3/2).
prim(latent25_3/2).
prim(latent95/2).
prim(latent17_2/2).
prim(latent587_3/2).
prim(latent488_2/2).
prim(latent1849_2/2).
prim(latent655_2/2).
prim(latent298_2/2).
prim(latent62_3/2).
prim(latent32_3/2).
prim(latent2009_3/2).
prim(latent324_2/2).
prim(latent777_3/2).
prim(latent817_2/2).
prim(latent1180_2/2).
prim(latent871_3/2).
prim(latent783_2/2).
prim(latent21_3/2).
prim(latent508_2/2).
prim(latent500_2/2).
prim(latent932_2/2).
prim(latent1132_3/2).
prim(latent1969_3/2).
prim(latent134_2/2).
prim(latent575_2/2).
prim(latent1118_3/2).
prim(latent1883_3/2).
prim(latent47_2/2).
prim(latent468_2/2).
prim(latent673_3/2).
prim(latent22_3/2).
prim(latent625_2/2).
prim(latent127_2/2).
prim(latent208_2/2).
prim(latent54_3/2).
prim(latent34_3/2).
prim(latent100_3/2).
prim(latent404_2/2).
prim(latent1879_3/2).
prim(latent18_3/2).
prim(latent58_3/2).
prim(latent1935_2/2).
prim(latent67_3/2).
prim(latent837_3/2).
prim(latent2020_3/2).
prim(latent385_2/2).
prim(latent1888_3/2).
prim(latent79/2).
prim(latent37_2/2).
prim(latent348_2/2).
prim(latent20_3/2).
prim(latent69_3/2).
prim(latent111_3/2).
prim(latent903_2/2).
prim(latent462_3/2).
prim(latent27_3/2).
prim(latent1441_2/2).
prim(latent2/2).
prim(latent2421_2/2).
prim(latent1895_3/2).
prim(latent1785_2/2).
prim(latent1459_3/2).
prim(latent495_2/2).
prim(latent589_2/2).
prim(latent399_3/2).
prim(latent51_3/2).
prim(latent137_2/2).
prim(latent10_2/2).
prim(latent1451_2/2).
prim(latent369_2/2).
prim(latent90_2/2).
prim(latent4_2/2).
prim(latent2571_2/2).
prim(latent53_3/2).
prim(latent1293_3/2).
prim(latent426_2/2).
prim(latent125_2/2).
prim(latent2622_3/2).
prim(latent2341_2/2).
prim(latent570_2/2).
prim(latent427_3/2).
prim(latent342_2/2).
prim(latent33_3/2).
prim(latent122_3/2).
prim(latent526_2/2).
prim(latent317_2/2).
prim(latent1995_3/2).
prim(latent131_2/2).
prim(latent414_2/2).
prim(latent23_3/2).
prim(latent264_2/2).
prim(latent2082_3/2).
prim(latent2173_2/2).
prim(latent243_2/2).
prim(latent357_2/2).
prim(latent569_2/2).
prim(latent1458_2/2).
prim(latent507_2/2).
prim(latent461_2/2).
prim(latent1004_3/2).
prim(latent130/2).
prim(latent13_2/2).
prim(latent1876_3/2).
prim(latent7_2/2).
prim(latent892_3/2).
prim(latent12_2/2).
prim(latent42_3/2).
prim(latent2270_2/2).
prim(latent678_2/2).
prim(latent312_2/2).
prim(latent56_3/2).
prim(latent822_2/2).
prim(latent600_3/2).
prim(latent444_2/2).
prim(p11/2).
prim(p13/2).
prim(p15/2).
prim(p19/2).
prim(p22/2).
prim(p29/2).
prim(p35/2).
prim(p45/2).
prim(p58/2).
prim(p80/2).
prim(p106/2).
prim(p114/2).
prim(p248/2).
prim(p465/2).
prim(p534/2).
prim(p1/2).
prim(p1/2).
prim(p24/2).
prim(p24/2).
prim(p26/2).
prim(p42/2).
prim(p96/2).
prim(p96/2).
prim(p116/2).
prim(p127/2).
prim(p127/2).
prim(p158/2).
prim(p158/2).
prim(p159/2).
prim(p162/2).
prim(p162/2).
prim(p180/2).
prim(p180/2).
prim(p186/2).
prim(p199/2).
prim(p199/2).
prim(p206/2).
prim(p235/2).
prim(p235/2).
prim(p260/2).
prim(p263/2).
prim(p263/2).
prim(p282/2).
prim(p286/2).
prim(p286/2).
prim(p316/2).
prim(p316/2).
prim(p318/2).
prim(p318/2).
prim(p344/2).
prim(p344/2).
prim(p349/2).
prim(p349/2).
prim(p383/2).
prim(p403/2).
prim(p418/2).
prim(p435/2).
prim(p460/2).
prim(p460/2).
prim(p497/2).
prim(p499/2).
prim(p499/2).
prim(p508/2).
prim(p510/2).
prim(p541/2).
prim(p595/2).
prim(p595/2).
prim(p624/2).
prim(p633/2).
prim(p633/2).
prim(p634/2).
prim(p634/2).
prim(p639/2).
prim(p647/2).
prim(p652/2).
prim(p686/2).
prim(p686/2).
prim(p765/2).
prim(p769/2).
prim(p775/2).
prim(p775/2).
prim(p18/2).
prim(p73/2).
prim(p93/2).
prim(p93/2).
prim(p98/2).
prim(p98/2).
prim(p168/2).
prim(p168/2).
prim(p213/2).
prim(p213/2).
prim(p214/2).
prim(p244/2).
prim(p336/2).
prim(p384/2).
prim(p478/2).
prim(p586/2).
prim(p613/2).
prim(p664/2).
prim(p722/2).
prim(p766/2).
prim(p766/2).
prim(p780/2).
prim(p2/2).
prim(p2/2).
prim(p6/2).
prim(p36/2).
prim(p36/2).
prim(p38/2).
prim(p38/2).
prim(p62/2).
prim(p62/2).
prim(p76/2).
prim(p76/2).
prim(p105/2).
prim(p136/2).
prim(p136/2).
prim(p152/2).
prim(p223/2).
prim(p238/2).
prim(p238/2).
prim(p268/2).
prim(p274/2).
prim(p274/2).
prim(p314/2).
prim(p315/2).
prim(p378/2).
prim(p378/2).
prim(p416/2).
prim(p416/2).
prim(p421/2).
prim(p444/2).
prim(p502/2).
prim(p502/2).
prim(p507/2).
prim(p507/2).
prim(p525/2).
prim(p557/2).
prim(p561/2).
prim(p605/2).
prim(p618/2).
prim(p644/2).
prim(p644/2).
prim(p679/2).
prim(p716/2).
prim(p729/2).
prim(p31/2).
prim(p31/2).
prim(p37/2).
prim(p37/2).
prim(p53/2).
prim(p53/2).
prim(p102/2).
prim(p102/2).
prim(p126/2).
prim(p137/2).
prim(p137/2).
prim(p149/2).
prim(p188/2).
prim(p197/2).
prim(p197/2).
prim(p225/2).
prim(p231/2).
prim(p231/2).
prim(p240/2).
prim(p240/2).
prim(p253/2).
prim(p253/2).
prim(p285/2).
prim(p285/2).
prim(p288/2).
prim(p325/2).
prim(p327/2).
prim(p331/2).
prim(p338/2).
prim(p338/2).
prim(p363/2).
prim(p407/2).
prim(p407/2).
prim(p411/2).
prim(p412/2).
prim(p412/2).
prim(p426/2).
prim(p468/2).
prim(p468/2).
prim(p481/2).
prim(p481/2).
prim(p493/2).
prim(p493/2).
prim(p509/2).
prim(p509/2).
prim(p592/2).
prim(p606/2).
prim(p612/2).
prim(p612/2).
prim(p630/2).
prim(p630/2).
prim(p687/2).
prim(p687/2).
prim(p710/2).
prim(p710/2).
prim(p713/2).
prim(p713/2).
prim(p753/2).
prim(p753/2).
prim(p760/2).
prim(p760/2).
prim(p772/2).
prim(p772/2).
prim(p798/2).
prim(p3/2).
prim(p5/2).
prim(p27/2).
prim(p28/2).
prim(p44/2).
prim(p50/2).
prim(p64/2).
prim(p75/2).
prim(p87/2).
prim(p90/2).
prim(p107/2).
prim(p122/2).
prim(p128/2).
prim(p132/2).
prim(p141/2).
prim(p183/2).
prim(p187/2).
prim(p189/2).
prim(p215/2).
prim(p218/2).
prim(p227/2).
prim(p241/2).
prim(p242/2).
prim(p243/2).
prim(p245/2).
prim(p254/2).
prim(p293/2).
prim(p319/2).
prim(p326/2).
prim(p432/2).
prim(p455/2).
prim(p488/2).
prim(p495/2).
prim(p516/2).
prim(p522/2).
prim(p527/2).
prim(p589/2).
prim(p675/2).
prim(p683/2).
prim(p735/2).
prim(p752/2).
prim(p781/2).
prim(p611/2).
prim(p17/2).
prim(p33/2).
prim(p52/2).
prim(p74/2).
prim(p85/2).
prim(p100/2).
prim(p121/2).
prim(p130/2).
prim(p133/2).
prim(p153/2).
prim(p172/2).
prim(p175/2).
prim(p179/2).
prim(p194/2).
prim(p207/2).
prim(p234/2).
prim(p256/2).
prim(p302/2).
prim(p332/2).
prim(p345/2).
prim(p371/2).
prim(p410/2).
prim(p467/2).
prim(p480/2).
prim(p483/2).
prim(p555/2).
prim(p569/2).
prim(p623/2).
prim(p759/2).
prim(p762/2).
prim(p783/2).
prim(p484/2).
prim(p9/2).
prim(p10/2).
prim(p12/2).
prim(p14/2).
prim(p30/2).
prim(p39/2).
prim(p43/2).
prim(p47/2).
prim(p67/2).
prim(p83/2).
prim(p108/2).
prim(p110/2).
prim(p164/2).
prim(p164/2).
prim(p166/2).
prim(p170/2).
prim(p174/2).
prim(p192/2).
prim(p204/2).
prim(p217/2).
prim(p220/2).
prim(p221/2).
prim(p249/2).
prim(p255/2).
prim(p264/2).
prim(p275/2).
prim(p283/2).
prim(p296/2).
prim(p303/2).
prim(p311/2).
prim(p322/2).
prim(p360/2).
prim(p362/2).
prim(p365/2).
prim(p388/2).
prim(p391/2).
prim(p399/2).
prim(p415/2).
prim(p430/2).
prim(p447/2).
prim(p473/2).
prim(p487/2).
prim(p496/2).
prim(p501/2).
prim(p515/2).
prim(p524/2).
prim(p530/2).
prim(p532/2).
prim(p544/2).
prim(p546/2).
prim(p553/2).
prim(p558/2).
prim(p563/2).
prim(p566/2).
prim(p567/2).
prim(p583/2).
prim(p593/2).
prim(p602/2).
prim(p616/2).
prim(p617/2).
prim(p656/2).
prim(p669/2).
prim(p669/2).
prim(p694/2).
prim(p694/2).
prim(p708/2).
prim(p711/2).
prim(p714/2).
prim(p726/2).
prim(p776/2).
prim(p794/2).
prim(p796/2).
prim(p32/2).
prim(p165/2).
prim(p203/2).
prim(p216/2).
prim(p328/2).
prim(p462/2).
prim(p4/2).
prim(p21/2).
prim(p41/2).
prim(p59/2).
prim(p65/2).
prim(p66/2).
prim(p66/2).
prim(p89/2).
prim(p129/2).
prim(p129/2).
prim(p134/2).
prim(p147/2).
prim(p169/2).
prim(p169/2).
prim(p198/2).
prim(p205/2).
prim(p239/2).
prim(p261/2).
prim(p262/2).
prim(p270/2).
prim(p281/2).
prim(p284/2).
prim(p313/2).
prim(p330/2).
prim(p348/2).
prim(p358/2).
prim(p379/2).
prim(p386/2).
prim(p389/2).
prim(p389/2).
prim(p413/2).
prim(p429/2).
prim(p437/2).
prim(p445/2).
prim(p449/2).
prim(p486/2).
prim(p486/2).
prim(p511/2).
prim(p542/2).
prim(p572/2).
prim(p575/2).
prim(p576/2).
prim(p614/2).
prim(p648/2).
prim(p662/2).
prim(p681/2).
prim(p702/2).
prim(p703/2).
prim(p709/2).
prim(p719/2).
prim(p721/2).
prim(p748/2).
prim(p767/2).
prim(p777/2).
prim(p784/2).
prim(p211/2).
prim(p382/2).
prim(p671/2).
prim(p680/2).
prim(p8/2).
prim(p8/2).
prim(p56/2).
prim(p56/2).
prim(p60/2).
prim(p60/2).
prim(p71/2).
prim(p101/2).
prim(p112/2).
prim(p120/2).
prim(p146/2).
prim(p182/2).
prim(p200/2).
prim(p236/2).
prim(p236/2).
prim(p257/2).
prim(p266/2).
prim(p269/2).
prim(p279/2).
prim(p295/2).
prim(p299/2).
prim(p301/2).
prim(p317/2).
prim(p324/2).
prim(p380/2).
prim(p380/2).
prim(p393/2).
prim(p450/2).
prim(p451/2).
prim(p451/2).
prim(p452/2).
prim(p452/2).
prim(p454/2).
prim(p471/2).
prim(p471/2).
prim(p503/2).
prim(p517/2).
prim(p521/2).
prim(p528/2).
prim(p531/2).
prim(p531/2).
prim(p539/2).
prim(p585/2).
prim(p628/2).
prim(p628/2).
prim(p629/2).
prim(p631/2).
prim(p645/2).
prim(p659/2).
prim(p665/2).
prim(p666/2).
prim(p667/2).
prim(p672/2).
prim(p673/2).
prim(p684/2).
prim(p689/2).
prim(p689/2).
prim(p693/2).
prim(p699/2).
prim(p700/2).
prim(p733/2).
prim(p734/2).
prim(p734/2).
prim(p741/2).
prim(p741/2).
prim(p742/2).
prim(p755/2).
prim(p755/2).
prim(p763/2).
prim(p773/2).
prim(p773/2).
prim(p173/2).
prim(p173/2).
prim(p280/2).
prim(p68/2).
prim(p81/2).
prim(p135/2).
prim(p135/2).
prim(p191/2).
prim(p202/2).
prim(p228/2).
prim(p277/2).
prim(p290/2).
prim(p304/2).
prim(p309/2).
prim(p312/2).
prim(p329/2).
prim(p392/2).
prim(p394/2).
prim(p400/2).
prim(p408/2).
prim(p419/2).
prim(p456/2).
prim(p457/2).
prim(p492/2).
prim(p519/2).
prim(p552/2).
prim(p562/2).
prim(p564/2).
prim(p587/2).
prim(p621/2).
prim(p770/2).
prim(p84/2).
prim(p150/2).
prim(p520/2).
prim(p565/2).
prim(p653/2).
prim(p99/2).
prim(p103/2).
prim(p103/2).
prim(p337/2).
prim(p337/2).
prim(p405/2).
prim(p405/2).
prim(p550/2).
prim(p550/2).
prim(p579/2).
prim(p579/2).
prim(p289/2).
prim(p289/2).
prim(p351/2).
prim(p351/2).
prim(p584/2).
prim(p584/2).
prim(p601/2).
prim(p601/2).
prim(p676/2).
prim(p676/2).

metarule(precon,[P/2,Q/1,R/2],([P,A,B]:-[[Q,A],[R,A,B]])).
metarule(postcon,[P/2,Q/2,R/1],([P,A,B]:-[[Q,A,B],[R,B]])).
metarule(chain,[P/2,Q/2,R/2],([P,A,B]:-[[Q,A,C],[R,C,B]])).
metarule(tailrec,[P/2,Q/2],([P,A,B]:-[[Q,A,C],[P,C,B]])).
%% metarule(curry3,[P/2,Q/3,C/0],([P,A,B]:-[[Q,A,B,C]])).

  
a:-
    cpus(CPU_COUNT),
    set_prolog_flag(cpu_count,CPU_COUNT),
    games(Games),
    playgol(Games),
    b,
    halt.

b:-
    cpus(CPU_COUNT),
    set_prolog_flag(cpu_count,CPU_COUNT),
    %get_time(T),
    %stamp_date_time(T, date(DY,DM,DD,TH,TM,TS,_,_,_), 'UTC'),
    %format('% started solving build tasks at ~w ~w ~w ~w:~w:~w\n', [DD, DM, DY, TH, TM, TS]),
    max_build_depth(BuildDepth),
    playgol:update_depth(BuildDepth),
    max_build_time(BuildTime),
    retractall(max_time(_)),
    assert(max_time(BuildTime)),
    tasks(Tasks),
    learn_tasks(Tasks,Progs),
    length(Progs,N),
    format('% num solved ~w\n',[N]),
    %get_time(T2),
    %stamp_date_time(T2, date(DY2,DM2,DD2,TH2,TM2,TS2,_,_,_), 'UTC'),
    %format('% finished solving build tasks at ~w ~w ~w ~w:~w:~w\n', [DD2, DM2, DY2, TH2, TM2, TS2]),
    halt.

learn_tasks(Tasks,Progs):-
    concurrent_maplist(learn_aux,Tasks,Xs),
    findall(true,member(true,Xs),Progs).

learn_aux(T,true):-
    train_examples(T,Pos,Neg),
    max_time(MaxTime),
    get_time(TTT),
    stamp_date_time(TTT, date(DY,DM,DD,TH,TM,TS,_,_,_), 'UTC'),
    format('% started solving build task at ~w ~w ~w ~w:~w:~w\n', [DD, DM, DY, TH, TM, TS]),
    catch(call_with_time_limit(MaxTime,learn(Pos,Neg,Prog)),time_limit_exceeded,(writeln('%timeout'),false)),!,
    get_time(TTT2),
    stamp_date_time(TTT2, date(DY2,DM2,DD2,TH2,TM2,TS2,_,_,_), 'UTC'),
    format('% finished solving build tasks at ~w ~w ~w ~w:~w:~w\n', [DD2, DM2, DY2, TH2, TM2, TS2]),
    pprint(Prog).
learn_aux(_,false).

do_test:-
    tasks(Tasks),
    maplist(do_test,Tasks),
    halt.

do_test(Task):-
    test_examples(Task,Pos),
    (current_predicate(Task/2) ->
        (
            format('%solved,~w,~w\n',[Task,1]),
            forall(member(X,Pos),(call(X) -> format('~w,~w\n',[1,1]); format('~w,~w\n',[1,0])))
        );
        (
            format('%solved,~w,~w\n',[Task,0]),
            forall(member(_,Pos),format('~w,~w\n',[0,0]))
        )).

gen_e(Task,Input,Output,Out):-
    Out=..[Task,s(Input,Output),s(_,[])].

play_examples(Task,Pos,[]):-
    findall(X,(play_pos(Task,A,B),gen_e(Task,A,B,X)),Pos1),
    sort_examples(Pos1,Pos).

train_examples(Task,Pos,[]):-
    findall(X,(build_pos(Task,A,B),gen_e(Task,A,B,X)),Pos1),
    sort_examples(Pos1,Pos).

test_examples(Task,Pos):-
    findall(X,(test_pos(Task,A,B),gen_e(Task,A,B,X)),Pos).

add_len(Atom,Len-Atom):-
    Atom=..[_Task,s(Input,_Output),s(_,[])],
    length(Input,Len).
remove_len(_-Atom,Atom).

sort_examples(L1,L2):-
  maplist(add_len,L1,L3),
  keysort(L3,L4),
  maplist(remove_len,L4,L2).

