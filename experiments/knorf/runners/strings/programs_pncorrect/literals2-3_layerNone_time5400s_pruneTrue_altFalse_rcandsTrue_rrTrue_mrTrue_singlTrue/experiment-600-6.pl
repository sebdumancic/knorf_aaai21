
:-['../playgol'].
:-['string-bk'].
:-['../metagol'].

:-['./programs_pncorrect/literals2-3_layerNone_time5400s_pruneTrue_altFalse_rcandsTrue_rrTrue_mrTrue_singlTrue/refactored_primitives-600-6.pl'].



:- use_module(library(time)).

play_time_interval(2).
max_build_time(60).
max_play_depth(4).
max_build_depth(5).
cpus(4).

metagol:functional.
%% metagol:max_clauses(10).

func_test([P,s(In,Out1),s(_,[])],PS,G):-
  \+ (metagol :prove_deduce([[P,s(In,Out2),s(_,[])]],PS,G),Out1\= Out2).



%% tell metagol to use the BK
prim(is_empty/1).
prim(not_empty/1). % maybe?

prim(is_space/1).
prim(not_space/1). % maybe?

prim(is_uppercase/1).
prim(is_lowercase/1).

prim(is_letter/1).
prim(not_letter/1).

prim(is_number/1).
prim(not_number/1).

prim(copy1/2).
prim(skip1/2).
prim(mk_uppercase/2).
prim(mk_lowercase/2).
%% prim(write1/3).

prim(latent85/2).
prim(latent27_3/2).
prim(latent212_2/2).
prim(latent12/2).
prim(latent1783_3/2).
prim(latent221_2/2).
prim(latent16_2/2).
prim(latent89_3/2).
prim(latent1537_2/2).
prim(latent1896_3/2).
prim(latent7_2/2).
prim(latent250_2/2).
prim(latent28_3/2).
prim(latent1900_3/2).
prim(latent355_2/2).
prim(latent29_3/2).
prim(latent44_3/2).
prim(latent642_2/2).
prim(latent149_2/2).
prim(latent9_2/2).
prim(latent14_2/2).
prim(latent305_2/2).
prim(latent1848_3/2).
prim(latent1671_2/2).
prim(latent66_3/2).
prim(latent671_2/2).
prim(latent1589_2/2).
prim(latent47_3/2).
prim(latent24_3/2).
prim(latent8_2/2).
prim(latent1157_3/2).
prim(latent90_2/2).
prim(latent641_2/2).
prim(latent513_2/2).
prim(latent434_2/2).
prim(latent1073_2/2).
prim(latent323_3/2).
prim(latent95_2/2).
prim(latent902_2/2).
prim(latent246_2/2).
prim(latent49_3/2).
prim(latent793_3/2).
prim(latent251_3/2).
prim(latent445_2/2).
prim(latent238_2/2).
prim(latent301_2/2).
prim(latent141_2/2).
prim(latent1033_2/2).
prim(latent98_2/2).
prim(latent1_2/2).
prim(latent318_2/2).
prim(latent45_3/2).
prim(latent20_3/2).
prim(latent1355_3/2).
prim(latent6_2/2).
prim(latent33_3/2).
prim(latent747_3/2).
prim(latent43_3/2).
prim(latent133_2/2).
prim(latent268_2/2).
prim(latent35_3/2).
prim(latent934_2/2).
prim(latent41_3/2).
prim(latent382_2/2).
prim(latent21_3/2).
prim(latent322_2/2).
prim(latent4_2/2).
prim(latent13_2/2).
prim(latent48_3/2).
prim(latent484_2/2).
prim(latent19_2/2).
prim(latent31_3/2).
prim(latent96_2/2).
prim(latent922_2/2).
prim(latent1602_3/2).
prim(latent87_2/2).
prim(latent1629_2/2).
prim(latent521_3/2).
prim(latent92_2/2).
prim(latent1863_3/2).
prim(latent123_2/2).
prim(latent610_2/2).
prim(latent1926_3/2).
prim(latent446_2/2).
prim(latent25_3/2).
prim(latent653_3/2).
prim(latent42_3/2).
prim(latent275_2/2).
prim(latent38_3/2).
prim(latent194_2/2).
prim(latent269_2/2).
prim(latent261_2/2).
prim(latent1775_3/2).
prim(latent17_3/2).
prim(latent571_2/2).
prim(latent2/2).
prim(latent81_2/2).
prim(latent1946_3/2).
prim(latent30_3/2).
prim(latent1368_2/2).
prim(latent1883_3/2).
prim(latent685_2/2).
prim(latent247_2/2).
prim(latent189_3/2).
prim(latent22_3/2).
prim(latent1238_3/2).
prim(latent167_2/2).
prim(latent112_2/2).
prim(latent36_3/2).
prim(latent239_2/2).
prim(latent381_2/2).
prim(latent1980_3/2).
prim(latent257_2/2).
prim(latent1085_3/2).
prim(latent300_2/2).
prim(latent800_2/2).
prim(latent1961_3/2).
prim(latent50_3/2).
prim(latent1281_3/2).
prim(latent313_2/2).
prim(latent205_2/2).
prim(latent770_3/2).
prim(latent196_2/2).
prim(latent203_2/2).
prim(latent3/2).
prim(latent1855_3/2).
prim(latent93/2).
prim(latent1202_2/2).
prim(latent15_2/2).
prim(latent303_2/2).
prim(latent60_3/2).
prim(latent225_3/2).
prim(latent188_2/2).
prim(latent54_3/2).
prim(latent26_3/2).
prim(latent164_2/2).
prim(latent34_3/2).
prim(latent321_2/2).
prim(latent552_2/2).
prim(latent1275_3/2).
prim(latent260_2/2).
prim(latent105_2/2).
prim(latent1383_2/2).
prim(latent40_2/2).
prim(latent37_3/2).
prim(latent350_2/2).
prim(latent18_3/2).
prim(latent5/2).
prim(latent1507_2/2).
prim(latent231_2/2).
prim(latent987_2/2).
prim(latent23_2/2).
prim(latent533_3/2).
prim(latent608_2/2).
prim(latent11_2/2).
prim(latent306_2/2).
prim(latent891_3/2).
prim(latent46_2/2).
prim(latent32_3/2).
prim(latent39_3/2).
prim(latent10_2/2).
prim(latent202_2/2).
prim(latent311_2/2).
prim(latent99_2/2).
prim(latent1014_3/2).
prim(latent664_2/2).
prim(latent249_2/2).
prim(latent1928_3/2).
prim(p1/2).
prim(p8/2).
prim(p9/2).
prim(p17/2).
prim(p26/2).
prim(p36/2).
prim(p60/2).
prim(p71/2).
prim(p111/2).
prim(p142/2).
prim(p143/2).
prim(p182/2).
prim(p201/2).
prim(p234/2).
prim(p247/2).
prim(p4/2).
prim(p5/2).
prim(p7/2).
prim(p10/2).
prim(p13/2).
prim(p21/2).
prim(p28/2).
prim(p41/2).
prim(p49/2).
prim(p55/2).
prim(p57/2).
prim(p62/2).
prim(p65/2).
prim(p66/2).
prim(p79/2).
prim(p85/2).
prim(p95/2).
prim(p104/2).
prim(p131/2).
prim(p260/2).
prim(p274/2).
prim(p308/2).
prim(p350/2).
prim(p370/2).
prim(p395/2).
prim(p451/2).
prim(p452/2).
prim(p472/2).
prim(p537/2).
prim(p572/2).
prim(p11/2).
prim(p20/2).
prim(p22/2).
prim(p22/2).
prim(p34/2).
prim(p88/2).
prim(p99/2).
prim(p99/2).
prim(p109/2).
prim(p113/2).
prim(p113/2).
prim(p116/2).
prim(p124/2).
prim(p124/2).
prim(p126/2).
prim(p153/2).
prim(p153/2).
prim(p163/2).
prim(p171/2).
prim(p171/2).
prim(p197/2).
prim(p206/2).
prim(p206/2).
prim(p223/2).
prim(p223/2).
prim(p237/2).
prim(p263/2).
prim(p263/2).
prim(p264/2).
prim(p288/2).
prim(p311/2).
prim(p331/2).
prim(p331/2).
prim(p334/2).
prim(p355/2).
prim(p355/2).
prim(p364/2).
prim(p368/2).
prim(p399/2).
prim(p406/2).
prim(p409/2).
prim(p412/2).
prim(p412/2).
prim(p417/2).
prim(p420/2).
prim(p430/2).
prim(p430/2).
prim(p434/2).
prim(p461/2).
prim(p461/2).
prim(p474/2).
prim(p501/2).
prim(p501/2).
prim(p546/2).
prim(p567/2).
prim(p578/2).
prim(p594/2).
prim(p179/2).
prim(p199/2).
prim(p204/2).
prim(p209/2).
prim(p522/2).
prim(p543/2).
prim(p599/2).
prim(p16/2).
prim(p51/2).
prim(p51/2).
prim(p68/2).
prim(p231/2).
prim(p242/2).
prim(p242/2).
prim(p244/2).
prim(p290/2).
prim(p290/2).
prim(p306/2).
prim(p306/2).
prim(p377/2).
prim(p377/2).
prim(p494/2).
prim(p494/2).
prim(p542/2).
prim(p545/2).
prim(p552/2).
prim(p575/2).
prim(p575/2).
prim(p91/2).
prim(p91/2).
prim(p108/2).
prim(p117/2).
prim(p117/2).
prim(p151/2).
prim(p183/2).
prim(p183/2).
prim(p184/2).
prim(p212/2).
prim(p301/2).
prim(p301/2).
prim(p326/2).
prim(p326/2).
prim(p327/2).
prim(p341/2).
prim(p341/2).
prim(p424/2).
prim(p424/2).
prim(p445/2).
prim(p445/2).
prim(p553/2).
prim(p576/2).
prim(p576/2).
prim(p577/2).
prim(p577/2).
prim(p125/2).
prim(p172/2).
prim(p31/2).
prim(p39/2).
prim(p46/2).
prim(p53/2).
prim(p74/2).
prim(p87/2).
prim(p149/2).
prim(p150/2).
prim(p165/2).
prim(p170/2).
prim(p175/2).
prim(p186/2).
prim(p189/2).
prim(p194/2).
prim(p198/2).
prim(p205/2).
prim(p215/2).
prim(p220/2).
prim(p235/2).
prim(p245/2).
prim(p261/2).
prim(p272/2).
prim(p275/2).
prim(p299/2).
prim(p300/2).
prim(p303/2).
prim(p309/2).
prim(p310/2).
prim(p339/2).
prim(p365/2).
prim(p415/2).
prim(p428/2).
prim(p455/2).
prim(p530/2).
prim(p531/2).
prim(p571/2).
prim(p589/2).
prim(p3/2).
prim(p6/2).
prim(p32/2).
prim(p38/2).
prim(p77/2).
prim(p94/2).
prim(p128/2).
prim(p166/2).
prim(p177/2).
prim(p216/2).
prim(p243/2).
prim(p251/2).
prim(p269/2).
prim(p289/2).
prim(p330/2).
prim(p379/2).
prim(p457/2).
prim(p457/2).
prim(p505/2).
prim(p510/2).
prim(p540/2).
prim(p573/2).
prim(p595/2).
prim(p188/2).
prim(p360/2).
prim(p493/2).
prim(p574/2).
prim(p586/2).
prim(p12/2).
prim(p25/2).
prim(p37/2).
prim(p37/2).
prim(p70/2).
prim(p105/2).
prim(p107/2).
prim(p119/2).
prim(p129/2).
prim(p133/2).
prim(p139/2).
prim(p140/2).
prim(p146/2).
prim(p148/2).
prim(p156/2).
prim(p226/2).
prim(p230/2).
prim(p233/2).
prim(p241/2).
prim(p252/2).
prim(p262/2).
prim(p277/2).
prim(p283/2).
prim(p284/2).
prim(p297/2).
prim(p307/2).
prim(p321/2).
prim(p335/2).
prim(p367/2).
prim(p369/2).
prim(p380/2).
prim(p397/2).
prim(p402/2).
prim(p421/2).
prim(p436/2).
prim(p440/2).
prim(p475/2).
prim(p478/2).
prim(p504/2).
prim(p504/2).
prim(p506/2).
prim(p536/2).
prim(p551/2).
prim(p554/2).
prim(p559/2).
prim(p559/2).
prim(p563/2).
prim(p564/2).
prim(p592/2).
prim(p196/2).
prim(p196/2).
prim(p400/2).
prim(p448/2).
prim(p560/2).
prim(p14/2).
prim(p23/2).
prim(p63/2).
prim(p97/2).
prim(p134/2).
prim(p135/2).
prim(p138/2).
prim(p162/2).
prim(p168/2).
prim(p173/2).
prim(p190/2).
prim(p225/2).
prim(p229/2).
prim(p259/2).
prim(p304/2).
prim(p319/2).
prim(p319/2).
prim(p382/2).
prim(p384/2).
prim(p387/2).
prim(p394/2).
prim(p414/2).
prim(p449/2).
prim(p456/2).
prim(p464/2).
prim(p471/2).
prim(p482/2).
prim(p483/2).
prim(p492/2).
prim(p492/2).
prim(p558/2).
prim(p558/2).
prim(p585/2).
prim(p591/2).
prim(p42/2).
prim(p18/2).
prim(p50/2).
prim(p54/2).
prim(p73/2).
prim(p84/2).
prim(p114/2).
prim(p114/2).
prim(p121/2).
prim(p121/2).
prim(p123/2).
prim(p123/2).
prim(p159/2).
prim(p159/2).
prim(p160/2).
prim(p160/2).
prim(p180/2).
prim(p187/2).
prim(p195/2).
prim(p238/2).
prim(p238/2).
prim(p239/2).
prim(p240/2).
prim(p240/2).
prim(p250/2).
prim(p256/2).
prim(p265/2).
prim(p276/2).
prim(p278/2).
prim(p278/2).
prim(p280/2).
prim(p298/2).
prim(p298/2).
prim(p320/2).
prim(p320/2).
prim(p322/2).
prim(p322/2).
prim(p323/2).
prim(p323/2).
prim(p324/2).
prim(p324/2).
prim(p343/2).
prim(p347/2).
prim(p357/2).
prim(p358/2).
prim(p363/2).
prim(p366/2).
prim(p371/2).
prim(p371/2).
prim(p381/2).
prim(p381/2).
prim(p404/2).
prim(p419/2).
prim(p446/2).
prim(p462/2).
prim(p462/2).
prim(p473/2).
prim(p473/2).
prim(p497/2).
prim(p512/2).
prim(p512/2).
prim(p529/2).
prim(p584/2).
prim(p588/2).
prim(p588/2).
prim(p484/2).
prim(p287/2).
prim(p2/2).
prim(p2/2).
prim(p137/2).
prim(p137/2).
prim(p141/2).
prim(p141/2).
prim(p391/2).
prim(p391/2).
prim(p267/2).
prim(p267/2).

metarule(precon,[P/2,Q/1,R/2],([P,A,B]:-[[Q,A],[R,A,B]])).
metarule(postcon,[P/2,Q/2,R/1],([P,A,B]:-[[Q,A,B],[R,B]])).
metarule(chain,[P/2,Q/2,R/2],([P,A,B]:-[[Q,A,C],[R,C,B]])).
metarule(tailrec,[P/2,Q/2],([P,A,B]:-[[Q,A,C],[P,C,B]])).
%% metarule(curry3,[P/2,Q/3,C/0],([P,A,B]:-[[Q,A,B,C]])).

  
a:-
    cpus(CPU_COUNT),
    set_prolog_flag(cpu_count,CPU_COUNT),
    games(Games),
    playgol(Games),
    b,
    halt.

b:-
    cpus(CPU_COUNT),
    set_prolog_flag(cpu_count,CPU_COUNT),
    %get_time(T),
    %stamp_date_time(T, date(DY,DM,DD,TH,TM,TS,_,_,_), 'UTC'),
    %format('% started solving build tasks at ~w ~w ~w ~w:~w:~w\n', [DD, DM, DY, TH, TM, TS]),
    max_build_depth(BuildDepth),
    playgol:update_depth(BuildDepth),
    max_build_time(BuildTime),
    retractall(max_time(_)),
    assert(max_time(BuildTime)),
    tasks(Tasks),
    learn_tasks(Tasks,Progs),
    length(Progs,N),
    format('% num solved ~w\n',[N]),
    %get_time(T2),
    %stamp_date_time(T2, date(DY2,DM2,DD2,TH2,TM2,TS2,_,_,_), 'UTC'),
    %format('% finished solving build tasks at ~w ~w ~w ~w:~w:~w\n', [DD2, DM2, DY2, TH2, TM2, TS2]),
    halt.

learn_tasks(Tasks,Progs):-
    concurrent_maplist(learn_aux,Tasks,Xs),
    findall(true,member(true,Xs),Progs).

learn_aux(T,true):-
    train_examples(T,Pos,Neg),
    max_time(MaxTime),
    get_time(TTT),
    stamp_date_time(TTT, date(DY,DM,DD,TH,TM,TS,_,_,_), 'UTC'),
    format('% started solving build task at ~w ~w ~w ~w:~w:~w\n', [DD, DM, DY, TH, TM, TS]),
    catch(call_with_time_limit(MaxTime,learn(Pos,Neg,Prog)),time_limit_exceeded,(writeln('%timeout'),false)),!,
    get_time(TTT2),
    stamp_date_time(TTT2, date(DY2,DM2,DD2,TH2,TM2,TS2,_,_,_), 'UTC'),
    format('% finished solving build tasks at ~w ~w ~w ~w:~w:~w\n', [DD2, DM2, DY2, TH2, TM2, TS2]),
    pprint(Prog).
learn_aux(_,false).

do_test:-
    tasks(Tasks),
    maplist(do_test,Tasks),
    halt.

do_test(Task):-
    test_examples(Task,Pos),
    (current_predicate(Task/2) ->
        (
            format('%solved,~w,~w\n',[Task,1]),
            forall(member(X,Pos),(call(X) -> format('~w,~w\n',[1,1]); format('~w,~w\n',[1,0])))
        );
        (
            format('%solved,~w,~w\n',[Task,0]),
            forall(member(_,Pos),format('~w,~w\n',[0,0]))
        )).

gen_e(Task,Input,Output,Out):-
    Out=..[Task,s(Input,Output),s(_,[])].

play_examples(Task,Pos,[]):-
    findall(X,(play_pos(Task,A,B),gen_e(Task,A,B,X)),Pos1),
    sort_examples(Pos1,Pos).

train_examples(Task,Pos,[]):-
    findall(X,(build_pos(Task,A,B),gen_e(Task,A,B,X)),Pos1),
    sort_examples(Pos1,Pos).

test_examples(Task,Pos):-
    findall(X,(test_pos(Task,A,B),gen_e(Task,A,B,X)),Pos).

add_len(Atom,Len-Atom):-
    Atom=..[_Task,s(Input,_Output),s(_,[])],
    length(Input,Len).
remove_len(_-Atom,Atom).

sort_examples(L1,L2):-
  maplist(add_len,L1,L3),
  keysort(L3,L4),
  maplist(remove_len,L4,L2).

