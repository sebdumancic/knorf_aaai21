
:-['../playgol'].
:-['string-bk'].
:-['../metagol'].

:-['./programs_pncorrect/literals2-3_layerNone_time5400s_pruneTrue_altFalse_rcandsTrue_rrTrue_mrTrue_singlTrue/refactored_primitives-800-3.pl'].



:- use_module(library(time)).

play_time_interval(2).
max_build_time(60).
max_play_depth(4).
max_build_depth(5).
cpus(4).

metagol:functional.
%% metagol:max_clauses(10).

func_test([P,s(In,Out1),s(_,[])],PS,G):-
  \+ (metagol :prove_deduce([[P,s(In,Out2),s(_,[])]],PS,G),Out1\= Out2).



%% tell metagol to use the BK
prim(is_empty/1).
prim(not_empty/1). % maybe?

prim(is_space/1).
prim(not_space/1). % maybe?

prim(is_uppercase/1).
prim(is_lowercase/1).

prim(is_letter/1).
prim(not_letter/1).

prim(is_number/1).
prim(not_number/1).

prim(copy1/2).
prim(skip1/2).
prim(mk_uppercase/2).
prim(mk_lowercase/2).
%% prim(write1/3).

prim(latent416_2/2).
prim(latent262_2/2).
prim(latent125_2/2).
prim(latent172_2/2).
prim(latent2471_3/2).
prim(latent1088_3/2).
prim(latent1226_2/2).
prim(latent897_2/2).
prim(latent122_2/2).
prim(latent129_2/2).
prim(latent441_2/2).
prim(latent1979_2/2).
prim(latent175_2/2).
prim(latent154_2/2).
prim(latent226_2/2).
prim(latent82_3/2).
prim(latent31_2/2).
prim(latent403_2/2).
prim(latent200_2/2).
prim(latent58_3/2).
prim(latent659_2/2).
prim(latent196_2/2).
prim(latent1831_2/2).
prim(latent1040_3/2).
prim(latent884_3/2).
prim(latent47_3/2).
prim(latent1064_3/2).
prim(latent97_2/2).
prim(latent257_2/2).
prim(latent208_2/2).
prim(latent1858_2/2).
prim(latent550_2/2).
prim(latent48_3/2).
prim(latent1021_3/2).
prim(latent202_2/2).
prim(latent1135_3/2).
prim(latent146_2/2).
prim(latent187_2/2).
prim(latent408_2/2).
prim(latent612_3/2).
prim(latent66_3/2).
prim(latent39_3/2).
prim(latent1223_3/2).
prim(latent1070_2/2).
prim(latent51_3/2).
prim(latent1017_3/2).
prim(latent100_2/2).
prim(latent42_3/2).
prim(latent246_2/2).
prim(latent1175_3/2).
prim(latent1007_3/2).
prim(latent124_2/2).
prim(latent404_2/2).
prim(latent213_2/2).
prim(latent1038_2/2).
prim(latent106_2/2).
prim(latent121_2/2).
prim(latent1220_3/2).
prim(latent2382_2/2).
prim(latent2338_2/2).
prim(latent282_2/2).
prim(latent238_2/2).
prim(latent1246_2/2).
prim(latent5/2).
prim(latent789_2/2).
prim(latent37_3/2).
prim(latent20_2/2).
prim(latent429_2/2).
prim(latent917_2/2).
prim(latent1442_3/2).
prim(latent363_2/2).
prim(latent976_3/2).
prim(latent2067_2/2).
prim(latent522_2/2).
prim(latent2120_2/2).
prim(latent322_2/2).
prim(latent2020_2/2).
prim(latent218_2/2).
prim(latent1266_3/2).
prim(latent2246_2/2).
prim(latent2458_3/2).
prim(latent1346_2/2).
prim(latent461_2/2).
prim(latent432_2/2).
prim(latent1498_3/2).
prim(latent354_2/2).
prim(latent1210_2/2).
prim(latent179_2/2).
prim(latent169_2/2).
prim(latent150_2/2).
prim(latent76_3/2).
prim(latent263_2/2).
prim(latent490_2/2).
prim(latent1094_3/2).
prim(latent1076_3/2).
prim(latent2269_2/2).
prim(latent315_2/2).
prim(latent269_2/2).
prim(latent258_2/2).
prim(latent1209_3/2).
prim(latent353_2/2).
prim(latent36_3/2).
prim(latent1552_2/2).
prim(latent79_3/2).
prim(latent856_2/2).
prim(latent912_3/2).
prim(latent34_2/2).
prim(latent1110_2/2).
prim(latent1097_3/2).
prim(latent534_2/2).
prim(latent711_2/2).
prim(latent1_2/2).
prim(latent1032_3/2).
prim(latent1186_3/2).
prim(latent777_2/2).
prim(latent1111_3/2).
prim(latent763_2/2).
prim(latent119_2/2).
prim(latent41_3/2).
prim(latent1014_3/2).
prim(latent191_2/2).
prim(latent21_3/2).
prim(latent89_3/2).
prim(latent455_2/2).
prim(latent1457_2/2).
prim(latent170_3/2).
prim(latent12_2/2).
prim(latent2/2).
prim(latent272_2/2).
prim(latent940_3/2).
prim(latent10_2/2).
prim(latent380_2/2).
prim(latent44_3/2).
prim(latent505_3/2).
prim(latent951_2/2).
prim(latent111_2/2).
prim(latent52_3/2).
prim(latent311_2/2).
prim(latent1247_3/2).
prim(latent128_2/2).
prim(latent180_2/2).
prim(latent1096_2/2).
prim(latent2669_3/2).
prim(latent221_2/2).
prim(latent23_3/2).
prim(latent880_2/2).
prim(latent56_3/2).
prim(latent248_2/2).
prim(latent1251_3/2).
prim(latent1104_3/2).
prim(latent817_2/2).
prim(latent433_2/2).
prim(latent17_3/2).
prim(latent133_2/2).
prim(latent62_3/2).
prim(latent18_3/2).
prim(latent1052_3/2).
prim(latent85_2/2).
prim(latent797_3/2).
prim(latent602_2/2).
prim(latent32_3/2).
prim(latent24_2/2).
prim(latent304_2/2).
prim(latent3/2).
prim(latent2421_2/2).
prim(latent49_3/2).
prim(latent423_2/2).
prim(latent147_2/2).
prim(latent2609_3/2).
prim(latent199_2/2).
prim(latent215_2/2).
prim(latent962_3/2).
prim(latent93_2/2).
prim(latent244_2/2).
prim(latent1255_3/2).
prim(latent60_3/2).
prim(latent1720_2/2).
prim(latent414_2/2).
prim(latent138_2/2).
prim(latent1949_2/2).
prim(latent216_2/2).
prim(latent94_2/2).
prim(latent95/2).
prim(latent105_2/2).
prim(latent220_2/2).
prim(latent1155_3/2).
prim(latent1118_3/2).
prim(latent1222_2/2).
prim(latent364_2/2).
prim(latent70_3/2).
prim(latent1303_3/2).
prim(latent754_2/2).
prim(latent15_2/2).
prim(latent4/2).
prim(latent46_3/2).
prim(latent705_2/2).
prim(latent641_2/2).
prim(latent434_2/2).
prim(latent526_2/2).
prim(latent1200_3/2).
prim(latent14_2/2).
prim(latent1113_3/2).
prim(latent862_2/2).
prim(latent6_2/2).
prim(latent689_2/2).
prim(latent197_2/2).
prim(latent2394_2/2).
prim(latent103_2/2).
prim(latent13_2/2).
prim(latent151_2/2).
prim(latent459_2/2).
prim(latent55_3/2).
prim(latent29_3/2).
prim(latent1673_2/2).
prim(latent474_3/2).
prim(latent194_2/2).
prim(latent1062_3/2).
prim(latent283_3/2).
prim(latent160_2/2).
prim(latent1283_2/2).
prim(latent2707_3/2).
prim(latent1216_3/2).
prim(latent16_2/2).
prim(latent369_2/2).
prim(latent57_2/2).
prim(latent1697_2/2).
prim(latent35_3/2).
prim(latent454_2/2).
prim(latent235_2/2).
prim(latent286_2/2).
prim(latent1197_3/2).
prim(latent324_2/2).
prim(latent2319_2/2).
prim(latent61_3/2).
prim(latent1239_3/2).
prim(latent780_2/2).
prim(latent813_3/2).
prim(latent113_2/2).
prim(latent1364_3/2).
prim(latent1290_3/2).
prim(latent714_3/2).
prim(latent497_2/2).
prim(latent428_2/2).
prim(latent1179_3/2).
prim(latent266_2/2).
prim(latent11_2/2).
prim(latent7_2/2).
prim(latent158_2/2).
prim(latent1144_3/2).
prim(latent26_3/2).
prim(latent342_2/2).
prim(latent176_2/2).
prim(latent98/2).
prim(latent30_3/2).
prim(latent1089_3/2).
prim(latent438_2/2).
prim(latent28_3/2).
prim(latent110_2/2).
prim(latent75_3/2).
prim(latent130_3/2).
prim(latent101/2).
prim(latent736_2/2).
prim(latent22_3/2).
prim(latent376_2/2).
prim(latent621_2/2).
prim(latent9_2/2).
prim(latent8_2/2).
prim(latent569_2/2).
prim(latent496_2/2).
prim(latent2104_2/2).
prim(latent684_2/2).
prim(latent979_2/2).
prim(latent1840_2/2).
prim(latent2366_2/2).
prim(latent1037_3/2).
prim(latent167_2/2).
prim(latent250_2/2).
prim(latent1234_3/2).
prim(latent1051_2/2).
prim(latent1771_3/2).
prim(latent682_2/2).
prim(latent1069_3/2).
prim(latent2726_3/2).
prim(latent295_2/2).
prim(latent259_2/2).
prim(latent442_2/2).
prim(latent136_2/2).
prim(latent827_2/2).
prim(p1/2).
prim(p2/2).
prim(p5/2).
prim(p12/2).
prim(p22/2).
prim(p31/2).
prim(p37/2).
prim(p65/2).
prim(p86/2).
prim(p94/2).
prim(p133/2).
prim(p244/2).
prim(p330/2).
prim(p353/2).
prim(p427/2).
prim(p755/2).
prim(p10/2).
prim(p62/2).
prim(p82/2).
prim(p85/2).
prim(p114/2).
prim(p130/2).
prim(p138/2).
prim(p145/2).
prim(p145/2).
prim(p153/2).
prim(p159/2).
prim(p159/2).
prim(p189/2).
prim(p190/2).
prim(p215/2).
prim(p239/2).
prim(p246/2).
prim(p274/2).
prim(p321/2).
prim(p322/2).
prim(p393/2).
prim(p403/2).
prim(p417/2).
prim(p465/2).
prim(p475/2).
prim(p543/2).
prim(p543/2).
prim(p554/2).
prim(p554/2).
prim(p560/2).
prim(p606/2).
prim(p700/2).
prim(p725/2).
prim(p753/2).
prim(p783/2).
prim(p783/2).
prim(p13/2).
prim(p13/2).
prim(p18/2).
prim(p69/2).
prim(p99/2).
prim(p101/2).
prim(p134/2).
prim(p134/2).
prim(p158/2).
prim(p164/2).
prim(p232/2).
prim(p238/2).
prim(p255/2).
prim(p287/2).
prim(p300/2).
prim(p334/2).
prim(p339/2).
prim(p340/2).
prim(p343/2).
prim(p399/2).
prim(p454/2).
prim(p485/2).
prim(p485/2).
prim(p526/2).
prim(p569/2).
prim(p631/2).
prim(p631/2).
prim(p636/2).
prim(p657/2).
prim(p657/2).
prim(p662/2).
prim(p695/2).
prim(p714/2).
prim(p745/2).
prim(p752/2).
prim(p25/2).
prim(p25/2).
prim(p27/2).
prim(p27/2).
prim(p38/2).
prim(p49/2).
prim(p50/2).
prim(p50/2).
prim(p76/2).
prim(p113/2).
prim(p123/2).
prim(p128/2).
prim(p166/2).
prim(p167/2).
prim(p167/2).
prim(p169/2).
prim(p176/2).
prim(p177/2).
prim(p198/2).
prim(p198/2).
prim(p221/2).
prim(p230/2).
prim(p241/2).
prim(p249/2).
prim(p249/2).
prim(p263/2).
prim(p304/2).
prim(p304/2).
prim(p310/2).
prim(p312/2).
prim(p347/2).
prim(p347/2).
prim(p350/2).
prim(p350/2).
prim(p360/2).
prim(p360/2).
prim(p364/2).
prim(p364/2).
prim(p370/2).
prim(p379/2).
prim(p382/2).
prim(p382/2).
prim(p395/2).
prim(p398/2).
prim(p398/2).
prim(p422/2).
prim(p442/2).
prim(p482/2).
prim(p482/2).
prim(p486/2).
prim(p546/2).
prim(p546/2).
prim(p565/2).
prim(p565/2).
prim(p567/2).
prim(p567/2).
prim(p570/2).
prim(p630/2).
prim(p642/2).
prim(p644/2).
prim(p644/2).
prim(p649/2).
prim(p673/2).
prim(p673/2).
prim(p690/2).
prim(p691/2).
prim(p691/2).
prim(p697/2).
prim(p697/2).
prim(p713/2).
prim(p721/2).
prim(p721/2).
prim(p743/2).
prim(p743/2).
prim(p754/2).
prim(p754/2).
prim(p8/2).
prim(p58/2).
prim(p109/2).
prim(p147/2).
prim(p349/2).
prim(p383/2).
prim(p490/2).
prim(p510/2).
prim(p581/2).
prim(p735/2).
prim(p29/2).
prim(p36/2).
prim(p63/2).
prim(p80/2).
prim(p95/2).
prim(p98/2).
prim(p102/2).
prim(p105/2).
prim(p116/2).
prim(p121/2).
prim(p126/2).
prim(p129/2).
prim(p135/2).
prim(p173/2).
prim(p181/2).
prim(p187/2).
prim(p194/2).
prim(p217/2).
prim(p228/2).
prim(p229/2).
prim(p243/2).
prim(p245/2).
prim(p250/2).
prim(p261/2).
prim(p262/2).
prim(p265/2).
prim(p317/2).
prim(p355/2).
prim(p368/2).
prim(p406/2).
prim(p409/2).
prim(p429/2).
prim(p447/2).
prim(p472/2).
prim(p489/2).
prim(p513/2).
prim(p520/2).
prim(p533/2).
prim(p542/2).
prim(p551/2).
prim(p571/2).
prim(p602/2).
prim(p620/2).
prim(p632/2).
prim(p658/2).
prim(p661/2).
prim(p666/2).
prim(p705/2).
prim(p738/2).
prim(p751/2).
prim(p758/2).
prim(p48/2).
prim(p54/2).
prim(p93/2).
prim(p107/2).
prim(p142/2).
prim(p160/2).
prim(p196/2).
prim(p219/2).
prim(p278/2).
prim(p289/2).
prim(p292/2).
prim(p294/2).
prim(p331/2).
prim(p333/2).
prim(p351/2).
prim(p387/2).
prim(p414/2).
prim(p435/2).
prim(p437/2).
prim(p460/2).
prim(p491/2).
prim(p511/2).
prim(p523/2).
prim(p539/2).
prim(p553/2).
prim(p588/2).
prim(p595/2).
prim(p608/2).
prim(p639/2).
prim(p645/2).
prim(p688/2).
prim(p750/2).
prim(p756/2).
prim(p4/2).
prim(p7/2).
prim(p19/2).
prim(p23/2).
prim(p30/2).
prim(p78/2).
prim(p87/2).
prim(p100/2).
prim(p108/2).
prim(p110/2).
prim(p111/2).
prim(p125/2).
prim(p157/2).
prim(p170/2).
prim(p192/2).
prim(p222/2).
prim(p227/2).
prim(p269/2).
prim(p283/2).
prim(p290/2).
prim(p295/2).
prim(p302/2).
prim(p305/2).
prim(p307/2).
prim(p309/2).
prim(p325/2).
prim(p327/2).
prim(p335/2).
prim(p348/2).
prim(p361/2).
prim(p369/2).
prim(p374/2).
prim(p394/2).
prim(p424/2).
prim(p425/2).
prim(p426/2).
prim(p455/2).
prim(p483/2).
prim(p493/2).
prim(p498/2).
prim(p500/2).
prim(p509/2).
prim(p538/2).
prim(p549/2).
prim(p576/2).
prim(p578/2).
prim(p591/2).
prim(p610/2).
prim(p616/2).
prim(p621/2).
prim(p643/2).
prim(p646/2).
prim(p653/2).
prim(p655/2).
prim(p668/2).
prim(p712/2).
prim(p723/2).
prim(p764/2).
prim(p766/2).
prim(p767/2).
prim(p770/2).
prim(p775/2).
prim(p777/2).
prim(p792/2).
prim(p9/2).
prim(p9/2).
prim(p11/2).
prim(p35/2).
prim(p81/2).
prim(p97/2).
prim(p112/2).
prim(p118/2).
prim(p127/2).
prim(p131/2).
prim(p139/2).
prim(p139/2).
prim(p143/2).
prim(p150/2).
prim(p150/2).
prim(p174/2).
prim(p174/2).
prim(p183/2).
prim(p186/2).
prim(p208/2).
prim(p210/2).
prim(p212/2).
prim(p212/2).
prim(p226/2).
prim(p242/2).
prim(p251/2).
prim(p264/2).
prim(p268/2).
prim(p272/2).
prim(p293/2).
prim(p306/2).
prim(p323/2).
prim(p328/2).
prim(p328/2).
prim(p354/2).
prim(p354/2).
prim(p402/2).
prim(p439/2).
prim(p439/2).
prim(p446/2).
prim(p449/2).
prim(p451/2).
prim(p452/2).
prim(p452/2).
prim(p453/2).
prim(p453/2).
prim(p464/2).
prim(p471/2).
prim(p496/2).
prim(p497/2).
prim(p501/2).
prim(p506/2).
prim(p521/2).
prim(p532/2).
prim(p532/2).
prim(p547/2).
prim(p555/2).
prim(p556/2).
prim(p558/2).
prim(p587/2).
prim(p587/2).
prim(p681/2).
prim(p730/2).
prim(p732/2).
prim(p732/2).
prim(p740/2).
prim(p741/2).
prim(p768/2).
prim(p769/2).
prim(p780/2).
prim(p728/2).
prim(p21/2).
prim(p40/2).
prim(p42/2).
prim(p45/2).
prim(p66/2).
prim(p84/2).
prim(p90/2).
prim(p96/2).
prim(p148/2).
prim(p151/2).
prim(p223/2).
prim(p248/2).
prim(p258/2).
prim(p280/2).
prim(p299/2).
prim(p336/2).
prim(p337/2).
prim(p384/2).
prim(p388/2).
prim(p391/2).
prim(p432/2).
prim(p467/2).
prim(p470/2).
prim(p499/2).
prim(p505/2).
prim(p515/2).
prim(p522/2).
prim(p525/2).
prim(p535/2).
prim(p561/2).
prim(p566/2).
prim(p568/2).
prim(p596/2).
prim(p601/2).
prim(p605/2).
prim(p617/2).
prim(p638/2).
prim(p648/2).
prim(p674/2).
prim(p739/2).
prim(p763/2).
prim(p793/2).
prim(p132/2).
prim(p580/2).
prim(p24/2).
prim(p52/2).
prim(p57/2).
prim(p68/2).
prim(p70/2).
prim(p70/2).
prim(p74/2).
prim(p79/2).
prim(p88/2).
prim(p117/2).
prim(p117/2).
prim(p120/2).
prim(p120/2).
prim(p136/2).
prim(p165/2).
prim(p171/2).
prim(p180/2).
prim(p202/2).
prim(p204/2).
prim(p259/2).
prim(p270/2).
prim(p270/2).
prim(p282/2).
prim(p282/2).
prim(p296/2).
prim(p296/2).
prim(p303/2).
prim(p316/2).
prim(p324/2).
prim(p344/2).
prim(p346/2).
prim(p356/2).
prim(p366/2).
prim(p416/2).
prim(p418/2).
prim(p440/2).
prim(p444/2).
prim(p448/2).
prim(p457/2).
prim(p466/2).
prim(p473/2).
prim(p473/2).
prim(p474/2).
prim(p481/2).
prim(p507/2).
prim(p524/2).
prim(p536/2).
prim(p550/2).
prim(p564/2).
prim(p599/2).
prim(p612/2).
prim(p619/2).
prim(p633/2).
prim(p637/2).
prim(p665/2).
prim(p671/2).
prim(p680/2).
prim(p682/2).
prim(p701/2).
prim(p704/2).
prim(p704/2).
prim(p720/2).
prim(p720/2).
prim(p747/2).
prim(p747/2).
prim(p771/2).
prim(p785/2).
prim(p789/2).
prim(p790/2).
prim(p799/2).
prim(p26/2).
prim(p106/2).
prim(p106/2).
prim(p367/2).
prim(p530/2).
prim(p89/2).
prim(p400/2).
prim(p318/2).
prim(p55/2).
prim(p55/2).
prim(p433/2).
prim(p433/2).
prim(p266/2).
prim(p266/2).
prim(p209/2).
prim(p209/2).
prim(p320/2).
prim(p320/2).

metarule(precon,[P/2,Q/1,R/2],([P,A,B]:-[[Q,A],[R,A,B]])).
metarule(postcon,[P/2,Q/2,R/1],([P,A,B]:-[[Q,A,B],[R,B]])).
metarule(chain,[P/2,Q/2,R/2],([P,A,B]:-[[Q,A,C],[R,C,B]])).
metarule(tailrec,[P/2,Q/2],([P,A,B]:-[[Q,A,C],[P,C,B]])).
%% metarule(curry3,[P/2,Q/3,C/0],([P,A,B]:-[[Q,A,B,C]])).

  
a:-
    cpus(CPU_COUNT),
    set_prolog_flag(cpu_count,CPU_COUNT),
    games(Games),
    playgol(Games),
    b,
    halt.

b:-
    cpus(CPU_COUNT),
    set_prolog_flag(cpu_count,CPU_COUNT),
    %get_time(T),
    %stamp_date_time(T, date(DY,DM,DD,TH,TM,TS,_,_,_), 'UTC'),
    %format('% started solving build tasks at ~w ~w ~w ~w:~w:~w\n', [DD, DM, DY, TH, TM, TS]),
    max_build_depth(BuildDepth),
    playgol:update_depth(BuildDepth),
    max_build_time(BuildTime),
    retractall(max_time(_)),
    assert(max_time(BuildTime)),
    tasks(Tasks),
    learn_tasks(Tasks,Progs),
    length(Progs,N),
    format('% num solved ~w\n',[N]),
    %get_time(T2),
    %stamp_date_time(T2, date(DY2,DM2,DD2,TH2,TM2,TS2,_,_,_), 'UTC'),
    %format('% finished solving build tasks at ~w ~w ~w ~w:~w:~w\n', [DD2, DM2, DY2, TH2, TM2, TS2]),
    halt.

learn_tasks(Tasks,Progs):-
    concurrent_maplist(learn_aux,Tasks,Xs),
    findall(true,member(true,Xs),Progs).

learn_aux(T,true):-
    train_examples(T,Pos,Neg),
    max_time(MaxTime),
    get_time(TTT),
    stamp_date_time(TTT, date(DY,DM,DD,TH,TM,TS,_,_,_), 'UTC'),
    format('% started solving build task at ~w ~w ~w ~w:~w:~w\n', [DD, DM, DY, TH, TM, TS]),
    catch(call_with_time_limit(MaxTime,learn(Pos,Neg,Prog)),time_limit_exceeded,(writeln('%timeout'),false)),!,
    get_time(TTT2),
    stamp_date_time(TTT2, date(DY2,DM2,DD2,TH2,TM2,TS2,_,_,_), 'UTC'),
    format('% finished solving build tasks at ~w ~w ~w ~w:~w:~w\n', [DD2, DM2, DY2, TH2, TM2, TS2]),
    pprint(Prog).
learn_aux(_,false).

do_test:-
    tasks(Tasks),
    maplist(do_test,Tasks),
    halt.

do_test(Task):-
    test_examples(Task,Pos),
    (current_predicate(Task/2) ->
        (
            format('%solved,~w,~w\n',[Task,1]),
            forall(member(X,Pos),(call(X) -> format('~w,~w\n',[1,1]); format('~w,~w\n',[1,0])))
        );
        (
            format('%solved,~w,~w\n',[Task,0]),
            forall(member(_,Pos),format('~w,~w\n',[0,0]))
        )).

gen_e(Task,Input,Output,Out):-
    Out=..[Task,s(Input,Output),s(_,[])].

play_examples(Task,Pos,[]):-
    findall(X,(play_pos(Task,A,B),gen_e(Task,A,B,X)),Pos1),
    sort_examples(Pos1,Pos).

train_examples(Task,Pos,[]):-
    findall(X,(build_pos(Task,A,B),gen_e(Task,A,B,X)),Pos1),
    sort_examples(Pos1,Pos).

test_examples(Task,Pos):-
    findall(X,(test_pos(Task,A,B),gen_e(Task,A,B,X)),Pos).

add_len(Atom,Len-Atom):-
    Atom=..[_Task,s(Input,_Output),s(_,[])],
    length(Input,Len).
remove_len(_-Atom,Atom).

sort_examples(L1,L2):-
  maplist(add_len,L1,L3),
  keysort(L3,L4),
  maplist(remove_len,L4,L2).

