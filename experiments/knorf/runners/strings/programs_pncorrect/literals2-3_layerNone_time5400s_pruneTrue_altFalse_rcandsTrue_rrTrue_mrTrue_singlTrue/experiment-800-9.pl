
:-['../playgol'].
:-['string-bk'].
:-['../metagol'].

:-['./programs_pncorrect/literals2-3_layerNone_time5400s_pruneTrue_altFalse_rcandsTrue_rrTrue_mrTrue_singlTrue/refactored_primitives-800-9.pl'].



:- use_module(library(time)).

play_time_interval(2).
max_build_time(60).
max_play_depth(4).
max_build_depth(5).
cpus(4).

metagol:functional.
%% metagol:max_clauses(10).

func_test([P,s(In,Out1),s(_,[])],PS,G):-
  \+ (metagol :prove_deduce([[P,s(In,Out2),s(_,[])]],PS,G),Out1\= Out2).



%% tell metagol to use the BK
prim(is_empty/1).
prim(not_empty/1). % maybe?

prim(is_space/1).
prim(not_space/1). % maybe?

prim(is_uppercase/1).
prim(is_lowercase/1).

prim(is_letter/1).
prim(not_letter/1).

prim(is_number/1).
prim(not_number/1).

prim(copy1/2).
prim(skip1/2).
prim(mk_uppercase/2).
prim(mk_lowercase/2).
%% prim(write1/3).

prim(latent113_2/2).
prim(latent19_2/2).
prim(latent135_2/2).
prim(latent90_2/2).
prim(latent115_2/2).
prim(latent1659_2/2).
prim(latent390_2/2).
prim(latent1/2).
prim(latent151_2/2).
prim(latent807_2/2).
prim(latent117_2/2).
prim(latent20_3/2).
prim(latent42_3/2).
prim(latent29_3/2).
prim(latent16_2/2).
prim(latent77_2/2).
prim(latent18_3/2).
prim(latent142_2/2).
prim(latent5_2/2).
prim(latent149_2/2).
prim(latent1747_3/2).
prim(latent703_3/2).
prim(latent443_2/2).
prim(latent31_3/2).
prim(latent1706_3/2).
prim(latent2425_2/2).
prim(latent631_2/2).
prim(latent249_2/2).
prim(latent11_2/2).
prim(latent2005_2/2).
prim(latent27_3/2).
prim(latent40_3/2).
prim(latent110_2/2).
prim(latent47_3/2).
prim(latent1794_3/2).
prim(latent254_2/2).
prim(latent1934_3/2).
prim(latent26_3/2).
prim(latent180_2/2).
prim(latent372_2/2).
prim(latent575_2/2).
prim(latent368_2/2).
prim(latent70_3/2).
prim(latent1750_3/2).
prim(latent114_2/2).
prim(latent95_2/2).
prim(latent24_3/2).
prim(latent466_2/2).
prim(latent714_3/2).
prim(latent1848_3/2).
prim(latent750_2/2).
prim(latent1929_3/2).
prim(latent1981_3/2).
prim(latent422_2/2).
prim(latent2158_2/2).
prim(latent3_2/2).
prim(latent37_3/2).
prim(latent2646_3/2).
prim(latent161_2/2).
prim(latent152_2/2).
prim(latent1645_2/2).
prim(latent128_2/2).
prim(latent1074_2/2).
prim(latent1977_3/2).
prim(latent2475_3/2).
prim(latent374_2/2).
prim(latent1113_3/2).
prim(latent1964_3/2).
prim(latent438_2/2).
prim(latent248_2/2).
prim(latent127_2/2).
prim(latent511_3/2).
prim(latent36_3/2).
prim(latent170_2/2).
prim(latent408_3/2).
prim(latent157_2/2).
prim(latent969_3/2).
prim(latent432_2/2).
prim(latent2430_2/2).
prim(latent28_2/2).
prim(latent819_2/2).
prim(latent799_2/2).
prim(latent871_2/2).
prim(latent1550_2/2).
prim(latent209_2/2).
prim(latent167_2/2).
prim(latent1971_3/2).
prim(latent1714_3/2).
prim(latent10_2/2).
prim(latent1961_3/2).
prim(latent111_2/2).
prim(latent1017_3/2).
prim(latent30_3/2).
prim(latent353_2/2).
prim(latent46_3/2).
prim(latent1027_2/2).
prim(latent1723_3/2).
prim(latent93_2/2).
prim(latent45_3/2).
prim(latent23_3/2).
prim(latent59_3/2).
prim(latent2200_2/2).
prim(latent298_2/2).
prim(latent395_3/2).
prim(latent34_3/2).
prim(latent162_2/2).
prim(latent482_2/2).
prim(latent1941_3/2).
prim(latent4/2).
prim(latent97_2/2).
prim(latent38_3/2).
prim(latent260_2/2).
prim(latent1950_3/2).
prim(latent393_2/2).
prim(latent1994_3/2).
prim(latent1117_3/2).
prim(latent646_2/2).
prim(latent296_2/2).
prim(latent815_2/2).
prim(latent17_3/2).
prim(latent148_2/2).
prim(latent154_2/2).
prim(latent440_2/2).
prim(latent80/2).
prim(latent125_2/2).
prim(latent1761_3/2).
prim(latent213_2/2).
prim(latent106_2/2).
prim(latent387_3/2).
prim(latent52_3/2).
prim(latent25_3/2).
prim(latent405_2/2).
prim(latent300_3/2).
prim(latent339_2/2).
prim(latent50_3/2).
prim(latent155_2/2).
prim(latent1904_2/2).
prim(latent414_2/2).
prim(latent285_2/2).
prim(latent234_2/2).
prim(latent933_3/2).
prim(latent195_2/2).
prim(latent1912_3/2).
prim(latent121_3/2).
prim(latent79_2/2).
prim(latent124_2/2).
prim(latent282_2/2).
prim(latent1988_3/2).
prim(latent1611_2/2).
prim(latent289_3/2).
prim(latent948_3/2).
prim(latent1947_3/2).
prim(latent1072_2/2).
prim(latent101_2/2).
prim(latent143_2/2).
prim(latent2035_3/2).
prim(latent8_2/2).
prim(latent323_2/2).
prim(latent246_2/2).
prim(latent15_2/2).
prim(latent133_2/2).
prim(latent564_2/2).
prim(latent461_2/2).
prim(latent185_2/2).
prim(latent2185_2/2).
prim(latent2034_2/2).
prim(latent64_3/2).
prim(latent7_2/2).
prim(latent44_3/2).
prim(latent1397_2/2).
prim(latent592_3/2).
prim(latent396_2/2).
prim(latent1898_3/2).
prim(latent136_2/2).
prim(latent191_2/2).
prim(latent91_3/2).
prim(latent267_2/2).
prim(latent2020_3/2).
prim(latent985_2/2).
prim(latent1867_3/2).
prim(latent1821_3/2).
prim(latent2479_2/2).
prim(latent385_2/2).
prim(latent9/2).
prim(latent474_2/2).
prim(latent360_2/2).
prim(latent334_2/2).
prim(latent21_3/2).
prim(latent1081_2/2).
prim(latent2014_3/2).
prim(latent898_2/2).
prim(latent902_3/2).
prim(latent43_3/2).
prim(latent130_2/2).
prim(latent33_3/2).
prim(latent22_2/2).
prim(latent435_2/2).
prim(latent119_2/2).
prim(latent12_2/2).
prim(latent181_2/2).
prim(latent131_2/2).
prim(latent2494_2/2).
prim(latent41_3/2).
prim(latent48_3/2).
prim(latent286_2/2).
prim(latent2671_3/2).
prim(latent1530_3/2).
prim(latent496_3/2).
prim(latent652_2/2).
prim(latent72_3/2).
prim(latent1283_2/2).
prim(latent116_2/2).
prim(latent1852_3/2).
prim(latent1121_2/2).
prim(latent1056_3/2).
prim(latent1814_3/2).
prim(latent768_3/2).
prim(latent1054_2/2).
prim(latent2018_3/2).
prim(latent391_2/2).
prim(latent39_2/2).
prim(latent833_2/2).
prim(latent476_2/2).
prim(latent63_3/2).
prim(latent146_2/2).
prim(latent1010_2/2).
prim(latent1412_2/2).
prim(latent1740_3/2).
prim(latent137_2/2).
prim(latent112_2/2).
prim(latent1213_3/2).
prim(latent35_3/2).
prim(latent1574_2/2).
prim(latent2283_2/2).
prim(latent1774_3/2).
prim(latent410_2/2).
prim(latent13_2/2).
prim(latent1975_3/2).
prim(latent634_2/2).
prim(latent425_2/2).
prim(latent163_2/2).
prim(latent1104_3/2).
prim(latent616_3/2).
prim(latent2532_2/2).
prim(latent1700_3/2).
prim(latent222_2/2).
prim(latent1882_3/2).
prim(latent383_2/2).
prim(latent413_2/2).
prim(latent312_3/2).
prim(latent6_2/2).
prim(latent168_2/2).
prim(latent122_2/2).
prim(latent802_2/2).
prim(latent32_3/2).
prim(latent49_3/2).
prim(latent598_3/2).
prim(latent227_2/2).
prim(latent1310_3/2).
prim(latent1789_3/2).
prim(latent1176_3/2).
prim(latent344_2/2).
prim(latent183_2/2).
prim(latent2409_2/2).
prim(latent14_2/2).
prim(latent335_2/2).
prim(latent966_2/2).
prim(latent541_2/2).
prim(latent2/2).
prim(latent145_2/2).
prim(latent1806_3/2).
prim(p3/2).
prim(p6/2).
prim(p11/2).
prim(p18/2).
prim(p22/2).
prim(p29/2).
prim(p42/2).
prim(p46/2).
prim(p47/2).
prim(p73/2).
prim(p86/2).
prim(p165/2).
prim(p176/2).
prim(p241/2).
prim(p763/2).
prim(p1/2).
prim(p34/2).
prim(p41/2).
prim(p48/2).
prim(p60/2).
prim(p66/2).
prim(p74/2).
prim(p75/2).
prim(p135/2).
prim(p148/2).
prim(p171/2).
prim(p242/2).
prim(p283/2).
prim(p290/2).
prim(p302/2).
prim(p320/2).
prim(p322/2).
prim(p361/2).
prim(p382/2).
prim(p432/2).
prim(p486/2).
prim(p556/2).
prim(p574/2).
prim(p595/2).
prim(p617/2).
prim(p663/2).
prim(p697/2).
prim(p727/2).
prim(p742/2).
prim(p786/2).
prim(p187/2).
prim(p7/2).
prim(p9/2).
prim(p16/2).
prim(p20/2).
prim(p24/2).
prim(p27/2).
prim(p56/2).
prim(p65/2).
prim(p71/2).
prim(p82/2).
prim(p85/2).
prim(p91/2).
prim(p100/2).
prim(p111/2).
prim(p113/2).
prim(p117/2).
prim(p121/2).
prim(p122/2).
prim(p130/2).
prim(p132/2).
prim(p139/2).
prim(p143/2).
prim(p157/2).
prim(p175/2).
prim(p185/2).
prim(p189/2).
prim(p191/2).
prim(p204/2).
prim(p206/2).
prim(p213/2).
prim(p231/2).
prim(p264/2).
prim(p272/2).
prim(p355/2).
prim(p395/2).
prim(p433/2).
prim(p459/2).
prim(p464/2).
prim(p488/2).
prim(p493/2).
prim(p508/2).
prim(p515/2).
prim(p555/2).
prim(p566/2).
prim(p592/2).
prim(p671/2).
prim(p677/2).
prim(p699/2).
prim(p718/2).
prim(p726/2).
prim(p736/2).
prim(p793/2).
prim(p794/2).
prim(p352/2).
prim(p481/2).
prim(p12/2).
prim(p28/2).
prim(p33/2).
prim(p80/2).
prim(p83/2).
prim(p83/2).
prim(p140/2).
prim(p140/2).
prim(p142/2).
prim(p150/2).
prim(p150/2).
prim(p162/2).
prim(p177/2).
prim(p193/2).
prim(p212/2).
prim(p220/2).
prim(p233/2).
prim(p240/2).
prim(p240/2).
prim(p267/2).
prim(p270/2).
prim(p274/2).
prim(p276/2).
prim(p280/2).
prim(p280/2).
prim(p296/2).
prim(p299/2).
prim(p310/2).
prim(p310/2).
prim(p326/2).
prim(p326/2).
prim(p336/2).
prim(p340/2).
prim(p340/2).
prim(p341/2).
prim(p341/2).
prim(p362/2).
prim(p363/2).
prim(p370/2).
prim(p376/2).
prim(p378/2).
prim(p378/2).
prim(p390/2).
prim(p390/2).
prim(p440/2).
prim(p440/2).
prim(p443/2).
prim(p465/2).
prim(p465/2).
prim(p472/2).
prim(p532/2).
prim(p560/2).
prim(p565/2).
prim(p565/2).
prim(p612/2).
prim(p619/2).
prim(p619/2).
prim(p621/2).
prim(p621/2).
prim(p630/2).
prim(p630/2).
prim(p640/2).
prim(p689/2).
prim(p689/2).
prim(p777/2).
prim(p778/2).
prim(p780/2).
prim(p51/2).
prim(p89/2).
prim(p138/2).
prim(p184/2).
prim(p186/2).
prim(p364/2).
prim(p389/2).
prim(p495/2).
prim(p31/2).
prim(p31/2).
prim(p52/2).
prim(p52/2).
prim(p57/2).
prim(p64/2).
prim(p101/2).
prim(p101/2).
prim(p114/2).
prim(p120/2).
prim(p209/2).
prim(p229/2).
prim(p229/2).
prim(p260/2).
prim(p273/2).
prim(p277/2).
prim(p295/2).
prim(p295/2).
prim(p304/2).
prim(p319/2).
prim(p319/2).
prim(p338/2).
prim(p360/2).
prim(p439/2).
prim(p450/2).
prim(p450/2).
prim(p484/2).
prim(p487/2).
prim(p509/2).
prim(p509/2).
prim(p511/2).
prim(p514/2).
prim(p514/2).
prim(p528/2).
prim(p564/2).
prim(p564/2).
prim(p603/2).
prim(p655/2).
prim(p679/2).
prim(p700/2).
prim(p700/2).
prim(p754/2).
prim(p754/2).
prim(p756/2).
prim(p8/2).
prim(p14/2).
prim(p15/2).
prim(p45/2).
prim(p58/2).
prim(p72/2).
prim(p99/2).
prim(p129/2).
prim(p133/2).
prim(p153/2).
prim(p207/2).
prim(p215/2).
prim(p216/2).
prim(p251/2).
prim(p251/2).
prim(p253/2).
prim(p311/2).
prim(p324/2).
prim(p324/2).
prim(p325/2).
prim(p334/2).
prim(p377/2).
prim(p467/2).
prim(p467/2).
prim(p474/2).
prim(p476/2).
prim(p494/2).
prim(p523/2).
prim(p551/2).
prim(p551/2).
prim(p568/2).
prim(p573/2).
prim(p582/2).
prim(p610/2).
prim(p625/2).
prim(p658/2).
prim(p660/2).
prim(p660/2).
prim(p681/2).
prim(p681/2).
prim(p692/2).
prim(p707/2).
prim(p707/2).
prim(p735/2).
prim(p743/2).
prim(p743/2).
prim(p746/2).
prim(p772/2).
prim(p773/2).
prim(p604/2).
prim(p32/2).
prim(p36/2).
prim(p38/2).
prim(p49/2).
prim(p78/2).
prim(p108/2).
prim(p127/2).
prim(p128/2).
prim(p144/2).
prim(p154/2).
prim(p159/2).
prim(p170/2).
prim(p190/2).
prim(p198/2).
prim(p199/2).
prim(p203/2).
prim(p205/2).
prim(p230/2).
prim(p238/2).
prim(p245/2).
prim(p245/2).
prim(p256/2).
prim(p286/2).
prim(p287/2).
prim(p292/2).
prim(p337/2).
prim(p345/2).
prim(p347/2).
prim(p354/2).
prim(p356/2).
prim(p393/2).
prim(p397/2).
prim(p399/2).
prim(p419/2).
prim(p427/2).
prim(p437/2).
prim(p441/2).
prim(p462/2).
prim(p512/2).
prim(p520/2).
prim(p542/2).
prim(p549/2).
prim(p567/2).
prim(p616/2).
prim(p620/2).
prim(p622/2).
prim(p672/2).
prim(p690/2).
prim(p716/2).
prim(p728/2).
prim(p744/2).
prim(p749/2).
prim(p752/2).
prim(p755/2).
prim(p769/2).
prim(p776/2).
prim(p783/2).
prim(p791/2).
prim(p257/2).
prim(p2/2).
prim(p39/2).
prim(p59/2).
prim(p90/2).
prim(p146/2).
prim(p149/2).
prim(p164/2).
prim(p200/2).
prim(p237/2).
prim(p244/2).
prim(p259/2).
prim(p265/2).
prim(p289/2).
prim(p298/2).
prim(p335/2).
prim(p342/2).
prim(p405/2).
prim(p478/2).
prim(p496/2).
prim(p530/2).
prim(p614/2).
prim(p624/2).
prim(p627/2).
prim(p635/2).
prim(p639/2).
prim(p642/2).
prim(p654/2).
prim(p684/2).
prim(p688/2).
prim(p702/2).
prim(p741/2).
prim(p761/2).
prim(p798/2).
prim(p17/2).
prim(p344/2).
prim(p470/2).
prim(p470/2).
prim(p725/2).
prim(p4/2).
prim(p21/2).
prim(p53/2).
prim(p54/2).
prim(p54/2).
prim(p68/2).
prim(p76/2).
prim(p76/2).
prim(p94/2).
prim(p94/2).
prim(p118/2).
prim(p126/2).
prim(p141/2).
prim(p141/2).
prim(p147/2).
prim(p172/2).
prim(p178/2).
prim(p197/2).
prim(p197/2).
prim(p201/2).
prim(p218/2).
prim(p226/2).
prim(p235/2).
prim(p239/2).
prim(p247/2).
prim(p249/2).
prim(p250/2).
prim(p255/2).
prim(p268/2).
prim(p269/2).
prim(p281/2).
prim(p332/2).
prim(p332/2).
prim(p348/2).
prim(p350/2).
prim(p380/2).
prim(p380/2).
prim(p381/2).
prim(p381/2).
prim(p387/2).
prim(p421/2).
prim(p424/2).
prim(p429/2).
prim(p429/2).
prim(p442/2).
prim(p445/2).
prim(p449/2).
prim(p457/2).
prim(p457/2).
prim(p461/2).
prim(p471/2).
prim(p471/2).
prim(p482/2).
prim(p491/2).
prim(p510/2).
prim(p510/2).
prim(p529/2).
prim(p531/2).
prim(p534/2).
prim(p535/2).
prim(p537/2).
prim(p541/2).
prim(p548/2).
prim(p569/2).
prim(p569/2).
prim(p580/2).
prim(p581/2).
prim(p581/2).
prim(p594/2).
prim(p599/2).
prim(p599/2).
prim(p608/2).
prim(p623/2).
prim(p634/2).
prim(p638/2).
prim(p656/2).
prim(p665/2).
prim(p666/2).
prim(p703/2).
prim(p719/2).
prim(p720/2).
prim(p739/2).
prim(p739/2).
prim(p764/2).
prim(p768/2).
prim(p775/2).
prim(p785/2).
prim(p789/2).
prim(p796/2).
prim(p796/2).
prim(p375/2).
prim(p636/2).
prim(p5/2).
prim(p61/2).
prim(p61/2).
prim(p70/2).
prim(p81/2).
prim(p95/2).
prim(p109/2).
prim(p116/2).
prim(p182/2).
prim(p183/2).
prim(p188/2).
prim(p194/2).
prim(p196/2).
prim(p202/2).
prim(p214/2).
prim(p217/2).
prim(p219/2).
prim(p223/2).
prim(p234/2).
prim(p252/2).
prim(p271/2).
prim(p279/2).
prim(p291/2).
prim(p316/2).
prim(p318/2).
prim(p321/2).
prim(p339/2).
prim(p349/2).
prim(p408/2).
prim(p410/2).
prim(p423/2).
prim(p453/2).
prim(p469/2).
prim(p475/2).
prim(p489/2).
prim(p498/2).
prim(p499/2).
prim(p521/2).
prim(p538/2).
prim(p540/2).
prim(p543/2).
prim(p550/2).
prim(p553/2).
prim(p559/2).
prim(p570/2).
prim(p585/2).
prim(p586/2).
prim(p618/2).
prim(p641/2).
prim(p647/2).
prim(p670/2).
prim(p682/2).
prim(p705/2).
prim(p717/2).
prim(p740/2).
prim(p799/2).
prim(p210/2).
prim(p246/2).
prim(p19/2).
prim(p750/2).
prim(p13/2).
prim(p13/2).
prim(p106/2).
prim(p106/2).
prim(p179/2).
prim(p179/2).
prim(p297/2).
prim(p297/2).
prim(p30/2).
prim(p30/2).
prim(p40/2).
prim(p40/2).
prim(p107/2).
prim(p107/2).
prim(p444/2).
prim(p444/2).
prim(p357/2).
prim(p357/2).

metarule(precon,[P/2,Q/1,R/2],([P,A,B]:-[[Q,A],[R,A,B]])).
metarule(postcon,[P/2,Q/2,R/1],([P,A,B]:-[[Q,A,B],[R,B]])).
metarule(chain,[P/2,Q/2,R/2],([P,A,B]:-[[Q,A,C],[R,C,B]])).
metarule(tailrec,[P/2,Q/2],([P,A,B]:-[[Q,A,C],[P,C,B]])).
%% metarule(curry3,[P/2,Q/3,C/0],([P,A,B]:-[[Q,A,B,C]])).

  
a:-
    cpus(CPU_COUNT),
    set_prolog_flag(cpu_count,CPU_COUNT),
    games(Games),
    playgol(Games),
    b,
    halt.

b:-
    cpus(CPU_COUNT),
    set_prolog_flag(cpu_count,CPU_COUNT),
    %get_time(T),
    %stamp_date_time(T, date(DY,DM,DD,TH,TM,TS,_,_,_), 'UTC'),
    %format('% started solving build tasks at ~w ~w ~w ~w:~w:~w\n', [DD, DM, DY, TH, TM, TS]),
    max_build_depth(BuildDepth),
    playgol:update_depth(BuildDepth),
    max_build_time(BuildTime),
    retractall(max_time(_)),
    assert(max_time(BuildTime)),
    tasks(Tasks),
    learn_tasks(Tasks,Progs),
    length(Progs,N),
    format('% num solved ~w\n',[N]),
    %get_time(T2),
    %stamp_date_time(T2, date(DY2,DM2,DD2,TH2,TM2,TS2,_,_,_), 'UTC'),
    %format('% finished solving build tasks at ~w ~w ~w ~w:~w:~w\n', [DD2, DM2, DY2, TH2, TM2, TS2]),
    halt.

learn_tasks(Tasks,Progs):-
    concurrent_maplist(learn_aux,Tasks,Xs),
    findall(true,member(true,Xs),Progs).

learn_aux(T,true):-
    train_examples(T,Pos,Neg),
    max_time(MaxTime),
    get_time(TTT),
    stamp_date_time(TTT, date(DY,DM,DD,TH,TM,TS,_,_,_), 'UTC'),
    format('% started solving build task at ~w ~w ~w ~w:~w:~w\n', [DD, DM, DY, TH, TM, TS]),
    catch(call_with_time_limit(MaxTime,learn(Pos,Neg,Prog)),time_limit_exceeded,(writeln('%timeout'),false)),!,
    get_time(TTT2),
    stamp_date_time(TTT2, date(DY2,DM2,DD2,TH2,TM2,TS2,_,_,_), 'UTC'),
    format('% finished solving build tasks at ~w ~w ~w ~w:~w:~w\n', [DD2, DM2, DY2, TH2, TM2, TS2]),
    pprint(Prog).
learn_aux(_,false).

do_test:-
    tasks(Tasks),
    maplist(do_test,Tasks),
    halt.

do_test(Task):-
    test_examples(Task,Pos),
    (current_predicate(Task/2) ->
        (
            format('%solved,~w,~w\n',[Task,1]),
            forall(member(X,Pos),(call(X) -> format('~w,~w\n',[1,1]); format('~w,~w\n',[1,0])))
        );
        (
            format('%solved,~w,~w\n',[Task,0]),
            forall(member(_,Pos),format('~w,~w\n',[0,0]))
        )).

gen_e(Task,Input,Output,Out):-
    Out=..[Task,s(Input,Output),s(_,[])].

play_examples(Task,Pos,[]):-
    findall(X,(play_pos(Task,A,B),gen_e(Task,A,B,X)),Pos1),
    sort_examples(Pos1,Pos).

train_examples(Task,Pos,[]):-
    findall(X,(build_pos(Task,A,B),gen_e(Task,A,B,X)),Pos1),
    sort_examples(Pos1,Pos).

test_examples(Task,Pos):-
    findall(X,(test_pos(Task,A,B),gen_e(Task,A,B,X)),Pos).

add_len(Atom,Len-Atom):-
    Atom=..[_Task,s(Input,_Output),s(_,[])],
    length(Input,Len).
remove_len(_-Atom,Atom).

sort_examples(L1,L2):-
  maplist(add_len,L1,L3),
  keysort(L3,L4),
  maplist(remove_len,L4,L2).

