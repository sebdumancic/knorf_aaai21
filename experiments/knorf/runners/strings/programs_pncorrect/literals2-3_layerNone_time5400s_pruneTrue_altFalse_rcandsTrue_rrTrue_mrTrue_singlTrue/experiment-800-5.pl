
:-['../playgol'].
:-['string-bk'].
:-['../metagol'].

:-['./programs_pncorrect/literals2-3_layerNone_time5400s_pruneTrue_altFalse_rcandsTrue_rrTrue_mrTrue_singlTrue/refactored_primitives-800-5.pl'].



:- use_module(library(time)).

play_time_interval(2).
max_build_time(60).
max_play_depth(4).
max_build_depth(5).
cpus(4).

metagol:functional.
%% metagol:max_clauses(10).

func_test([P,s(In,Out1),s(_,[])],PS,G):-
  \+ (metagol :prove_deduce([[P,s(In,Out2),s(_,[])]],PS,G),Out1\= Out2).



%% tell metagol to use the BK
prim(is_empty/1).
prim(not_empty/1). % maybe?

prim(is_space/1).
prim(not_space/1). % maybe?

prim(is_uppercase/1).
prim(is_lowercase/1).

prim(is_letter/1).
prim(not_letter/1).

prim(is_number/1).
prim(not_number/1).

prim(copy1/2).
prim(skip1/2).
prim(mk_uppercase/2).
prim(mk_lowercase/2).
%% prim(write1/3).

prim(latent2357_3/2).
prim(latent171_2/2).
prim(latent322_2/2).
prim(latent2516_3/2).
prim(latent512_2/2).
prim(latent416_2/2).
prim(latent386_2/2).
prim(latent415_2/2).
prim(latent306_2/2).
prim(latent286_2/2).
prim(latent235_2/2).
prim(latent2353_3/2).
prim(latent2256_2/2).
prim(latent223_2/2).
prim(latent268_3/2).
prim(latent1242_3/2).
prim(latent105_2/2).
prim(latent679_2/2).
prim(latent96_2/2).
prim(latent1950_3/2).
prim(latent11_2/2).
prim(latent2209_3/2).
prim(latent36_3/2).
prim(latent2534_3/2).
prim(latent446_3/2).
prim(latent404_2/2).
prim(latent1165_2/2).
prim(latent150_2/2).
prim(latent1240_2/2).
prim(latent216_2/2).
prim(latent2391_3/2).
prim(latent748_3/2).
prim(latent807_3/2).
prim(latent2401_3/2).
prim(latent14_2/2).
prim(latent532_2/2).
prim(latent2596_3/2).
prim(latent43_3/2).
prim(latent534_2/2).
prim(latent339_2/2).
prim(latent1947_3/2).
prim(latent103_2/2).
prim(latent19_2/2).
prim(latent1576_3/2).
prim(latent632_2/2).
prim(latent2492_3/2).
prim(latent317_2/2).
prim(latent2340_3/2).
prim(latent292_2/2).
prim(latent2536_3/2).
prim(latent137_2/2).
prim(latent2417_3/2).
prim(latent98_2/2).
prim(latent308_2/2).
prim(latent2385_3/2).
prim(latent684_3/2).
prim(latent5_2/2).
prim(latent123_2/2).
prim(latent127_2/2).
prim(latent154_2/2).
prim(latent1893_2/2).
prim(latent467_2/2).
prim(latent10_2/2).
prim(latent65_3/2).
prim(latent42_3/2).
prim(latent52_3/2).
prim(latent13_2/2).
prim(latent2570_3/2).
prim(latent135_2/2).
prim(latent419_2/2).
prim(latent351_2/2).
prim(latent266_3/2).
prim(latent2604_3/2).
prim(latent2461_3/2).
prim(latent1528_2/2).
prim(latent34_3/2).
prim(latent67_3/2).
prim(latent31_2/2).
prim(latent6/2).
prim(latent39_3/2).
prim(latent315_2/2).
prim(latent1279_2/2).
prim(latent868_2/2).
prim(latent152_2/2).
prim(latent77_2/2).
prim(latent290_3/2).
prim(latent335_3/2).
prim(latent1201_2/2).
prim(latent27_3/2).
prim(latent1096_2/2).
prim(latent233_2/2).
prim(latent573_2/2).
prim(latent2475_3/2).
prim(latent438_2/2).
prim(latent3/2).
prim(latent1553_2/2).
prim(latent298_2/2).
prim(latent253_2/2).
prim(latent53_2/2).
prim(latent1089_3/2).
prim(latent1268_2/2).
prim(latent2444_3/2).
prim(latent326_2/2).
prim(latent564_2/2).
prim(latent2531_3/2).
prim(latent1603_3/2).
prim(latent2547_3/2).
prim(latent1046_3/2).
prim(latent294_2/2).
prim(latent281_2/2).
prim(latent95_2/2).
prim(latent2504_3/2).
prim(latent661_2/2).
prim(latent15_2/2).
prim(latent1374_2/2).
prim(latent112_2/2).
prim(latent111_2/2).
prim(latent24_3/2).
prim(latent2470_3/2).
prim(latent2555_3/2).
prim(latent2414_3/2).
prim(latent934_3/2).
prim(latent4/2).
prim(latent1833_2/2).
prim(latent967_2/2).
prim(latent2563_3/2).
prim(latent314_2/2).
prim(latent1_2/2).
prim(latent8_2/2).
prim(latent913_2/2).
prim(latent181_2/2).
prim(latent102_2/2).
prim(latent57_3/2).
prim(latent25_2/2).
prim(latent196_2/2).
prim(latent1747_3/2).
prim(latent2428_3/2).
prim(latent328_2/2).
prim(latent395_2/2).
prim(latent2382_3/2).
prim(latent2323_3/2).
prim(latent68_3/2).
prim(latent247_2/2).
prim(latent344_2/2).
prim(latent2620_3/2).
prim(latent82_3/2).
prim(latent435_2/2).
prim(latent144_2/2).
prim(latent420_2/2).
prim(latent64_3/2).
prim(latent319_2/2).
prim(latent228_2/2).
prim(latent589_2/2).
prim(latent56_3/2).
prim(latent2035_3/2).
prim(latent107_2/2).
prim(latent93_2/2).
prim(latent2250_2/2).
prim(latent805_2/2).
prim(latent327_3/2).
prim(latent983_2/2).
prim(latent167_2/2).
prim(latent645_3/2).
prim(latent1227_2/2).
prim(latent47_3/2).
prim(latent1474_2/2).
prim(latent41_3/2).
prim(latent66_3/2).
prim(latent2/2).
prim(latent1347_2/2).
prim(latent359_2/2).
prim(latent132_2/2).
prim(latent596_2/2).
prim(latent2418_3/2).
prim(latent462_2/2).
prim(latent69_3/2).
prim(latent238_2/2).
prim(latent495_3/2).
prim(latent124_2/2).
prim(latent336_2/2).
prim(latent2426_3/2).
prim(latent91/2).
prim(latent38_3/2).
prim(latent1424_2/2).
prim(latent206_2/2).
prim(latent2367_3/2).
prim(latent51_3/2).
prim(latent619_3/2).
prim(latent413_2/2).
prim(latent54_3/2).
prim(latent272_2/2).
prim(latent2488_3/2).
prim(latent354_2/2).
prim(latent200_2/2).
prim(latent768_2/2).
prim(latent358_2/2).
prim(latent1029_2/2).
prim(latent1742_2/2).
prim(latent1341_3/2).
prim(latent663_2/2).
prim(latent338_2/2).
prim(latent368_2/2).
prim(latent602_2/2).
prim(latent30_3/2).
prim(latent2514_3/2).
prim(latent16_2/2).
prim(latent114_2/2).
prim(latent796_3/2).
prim(latent12_2/2).
prim(latent145_2/2).
prim(latent45_3/2).
prim(latent1698_2/2).
prim(latent481_2/2).
prim(latent104_2/2).
prim(latent2550_3/2).
prim(latent2346_3/2).
prim(latent2345_3/2).
prim(latent130_2/2).
prim(latent2509_3/2).
prim(latent2435_3/2).
prim(latent60_3/2).
prim(latent300_2/2).
prim(latent117_2/2).
prim(latent312_2/2).
prim(latent2070_3/2).
prim(latent58_3/2).
prim(latent219_2/2).
prim(latent2520_3/2).
prim(latent97_2/2).
prim(latent2562_3/2).
prim(latent18_3/2).
prim(latent2583_3/2).
prim(latent2495_3/2).
prim(latent955_2/2).
prim(latent2351_3/2).
prim(latent122_2/2).
prim(latent2524_3/2).
prim(latent7_2/2).
prim(latent199_2/2).
prim(latent1719_2/2).
prim(latent205_2/2).
prim(latent46_3/2).
prim(latent436_2/2).
prim(latent1499_2/2).
prim(latent128_2/2).
prim(latent316_3/2).
prim(latent1375_2/2).
prim(latent2468_3/2).
prim(latent23_3/2).
prim(latent2505_3/2).
prim(latent9_2/2).
prim(latent33_3/2).
prim(latent406_2/2).
prim(latent189_2/2).
prim(latent1038_2/2).
prim(latent1640_3/2).
prim(latent274_2/2).
prim(latent280_2/2).
prim(latent1448_2/2).
prim(latent279_2/2).
prim(latent139_2/2).
prim(latent1024_2/2).
prim(latent101_2/2).
prim(latent840_2/2).
prim(latent1055_3/2).
prim(latent2329_3/2).
prim(latent348_2/2).
prim(latent2576_3/2).
prim(latent1928_3/2).
prim(latent32_3/2).
prim(latent202_2/2).
prim(latent853_2/2).
prim(latent99_2/2).
prim(latent517_3/2).
prim(latent61_3/2).
prim(latent35_3/2).
prim(latent74_3/2).
prim(latent635_2/2).
prim(latent771_2/2).
prim(p5/2).
prim(p10/2).
prim(p11/2).
prim(p18/2).
prim(p27/2).
prim(p28/2).
prim(p36/2).
prim(p96/2).
prim(p97/2).
prim(p120/2).
prim(p142/2).
prim(p296/2).
prim(p574/2).
prim(p753/2).
prim(p1/2).
prim(p6/2).
prim(p35/2).
prim(p44/2).
prim(p52/2).
prim(p71/2).
prim(p83/2).
prim(p107/2).
prim(p109/2).
prim(p116/2).
prim(p117/2).
prim(p146/2).
prim(p163/2).
prim(p179/2).
prim(p209/2).
prim(p290/2).
prim(p309/2).
prim(p328/2).
prim(p337/2).
prim(p359/2).
prim(p374/2).
prim(p375/2).
prim(p379/2).
prim(p387/2).
prim(p390/2).
prim(p397/2).
prim(p400/2).
prim(p439/2).
prim(p457/2).
prim(p482/2).
prim(p503/2).
prim(p538/2).
prim(p550/2).
prim(p559/2).
prim(p561/2).
prim(p562/2).
prim(p568/2).
prim(p570/2).
prim(p586/2).
prim(p644/2).
prim(p657/2).
prim(p701/2).
prim(p731/2).
prim(p744/2).
prim(p763/2).
prim(p766/2).
prim(p778/2).
prim(p3/2).
prim(p12/2).
prim(p13/2).
prim(p14/2).
prim(p17/2).
prim(p20/2).
prim(p75/2).
prim(p105/2).
prim(p137/2).
prim(p139/2).
prim(p167/2).
prim(p218/2).
prim(p229/2).
prim(p230/2).
prim(p231/2).
prim(p235/2).
prim(p276/2).
prim(p306/2).
prim(p357/2).
prim(p381/2).
prim(p417/2).
prim(p448/2).
prim(p551/2).
prim(p572/2).
prim(p647/2).
prim(p648/2).
prim(p673/2).
prim(p24/2).
prim(p24/2).
prim(p26/2).
prim(p26/2).
prim(p34/2).
prim(p37/2).
prim(p59/2).
prim(p62/2).
prim(p62/2).
prim(p88/2).
prim(p100/2).
prim(p100/2).
prim(p102/2).
prim(p102/2).
prim(p104/2).
prim(p104/2).
prim(p128/2).
prim(p155/2).
prim(p155/2).
prim(p169/2).
prim(p171/2).
prim(p171/2).
prim(p180/2).
prim(p189/2).
prim(p196/2).
prim(p196/2).
prim(p219/2).
prim(p226/2).
prim(p226/2).
prim(p247/2).
prim(p253/2).
prim(p253/2).
prim(p259/2).
prim(p284/2).
prim(p302/2).
prim(p302/2).
prim(p305/2).
prim(p305/2).
prim(p335/2).
prim(p345/2).
prim(p370/2).
prim(p402/2).
prim(p495/2).
prim(p522/2).
prim(p529/2).
prim(p537/2).
prim(p537/2).
prim(p543/2).
prim(p554/2).
prim(p602/2).
prim(p622/2).
prim(p626/2).
prim(p654/2).
prim(p655/2).
prim(p655/2).
prim(p661/2).
prim(p692/2).
prim(p703/2).
prim(p703/2).
prim(p774/2).
prim(p782/2).
prim(p788/2).
prim(p791/2).
prim(p21/2).
prim(p25/2).
prim(p53/2).
prim(p64/2).
prim(p90/2).
prim(p123/2).
prim(p386/2).
prim(p606/2).
prim(p630/2).
prim(p634/2).
prim(p681/2).
prim(p746/2).
prim(p790/2).
prim(p790/2).
prim(p60/2).
prim(p74/2).
prim(p81/2).
prim(p125/2).
prim(p141/2).
prim(p147/2).
prim(p164/2).
prim(p164/2).
prim(p222/2).
prim(p275/2).
prim(p433/2).
prim(p436/2).
prim(p472/2).
prim(p532/2).
prim(p592/2).
prim(p603/2).
prim(p704/2).
prim(p704/2).
prim(p9/2).
prim(p23/2).
prim(p30/2).
prim(p69/2).
prim(p77/2).
prim(p122/2).
prim(p124/2).
prim(p130/2).
prim(p173/2).
prim(p182/2).
prim(p201/2).
prim(p204/2).
prim(p206/2).
prim(p232/2).
prim(p234/2).
prim(p234/2).
prim(p282/2).
prim(p285/2).
prim(p311/2).
prim(p338/2).
prim(p367/2).
prim(p407/2).
prim(p407/2).
prim(p414/2).
prim(p422/2).
prim(p444/2).
prim(p478/2).
prim(p519/2).
prim(p547/2).
prim(p547/2).
prim(p582/2).
prim(p604/2).
prim(p625/2).
prim(p635/2).
prim(p664/2).
prim(p683/2).
prim(p683/2).
prim(p684/2).
prim(p700/2).
prim(p700/2).
prim(p729/2).
prim(p739/2).
prim(p748/2).
prim(p796/2).
prim(p119/2).
prim(p38/2).
prim(p40/2).
prim(p47/2).
prim(p86/2).
prim(p91/2).
prim(p194/2).
prim(p221/2).
prim(p233/2).
prim(p254/2).
prim(p268/2).
prim(p277/2).
prim(p286/2).
prim(p289/2).
prim(p312/2).
prim(p321/2).
prim(p333/2).
prim(p344/2).
prim(p356/2).
prim(p366/2).
prim(p382/2).
prim(p388/2).
prim(p409/2).
prim(p415/2).
prim(p419/2).
prim(p449/2).
prim(p451/2).
prim(p465/2).
prim(p475/2).
prim(p476/2).
prim(p502/2).
prim(p555/2).
prim(p569/2).
prim(p580/2).
prim(p597/2).
prim(p619/2).
prim(p628/2).
prim(p649/2).
prim(p656/2).
prim(p667/2).
prim(p682/2).
prim(p693/2).
prim(p709/2).
prim(p711/2).
prim(p730/2).
prim(p735/2).
prim(p770/2).
prim(p2/2).
prim(p15/2).
prim(p43/2).
prim(p58/2).
prim(p61/2).
prim(p67/2).
prim(p78/2).
prim(p103/2).
prim(p106/2).
prim(p112/2).
prim(p138/2).
prim(p154/2).
prim(p176/2).
prim(p199/2).
prim(p215/2).
prim(p238/2).
prim(p255/2).
prim(p265/2).
prim(p384/2).
prim(p396/2).
prim(p423/2).
prim(p484/2).
prim(p504/2).
prim(p508/2).
prim(p539/2).
prim(p638/2).
prim(p642/2).
prim(p651/2).
prim(p688/2).
prim(p696/2).
prim(p725/2).
prim(p749/2).
prim(p799/2).
prim(p800/2).
prim(p267/2).
prim(p360/2).
prim(p435/2).
prim(p652/2).
prim(p4/2).
prim(p8/2).
prim(p16/2).
prim(p33/2).
prim(p48/2).
prim(p56/2).
prim(p76/2).
prim(p85/2).
prim(p95/2).
prim(p110/2).
prim(p114/2).
prim(p148/2).
prim(p151/2).
prim(p160/2).
prim(p168/2).
prim(p187/2).
prim(p187/2).
prim(p198/2).
prim(p211/2).
prim(p216/2).
prim(p242/2).
prim(p261/2).
prim(p270/2).
prim(p318/2).
prim(p318/2).
prim(p336/2).
prim(p342/2).
prim(p346/2).
prim(p352/2).
prim(p369/2).
prim(p372/2).
prim(p398/2).
prim(p401/2).
prim(p408/2).
prim(p416/2).
prim(p431/2).
prim(p450/2).
prim(p466/2).
prim(p488/2).
prim(p488/2).
prim(p494/2).
prim(p497/2).
prim(p499/2).
prim(p507/2).
prim(p510/2).
prim(p521/2).
prim(p533/2).
prim(p548/2).
prim(p581/2).
prim(p587/2).
prim(p596/2).
prim(p601/2).
prim(p617/2).
prim(p637/2).
prim(p637/2).
prim(p639/2).
prim(p659/2).
prim(p666/2).
prim(p686/2).
prim(p690/2).
prim(p708/2).
prim(p716/2).
prim(p727/2).
prim(p781/2).
prim(p787/2).
prim(p789/2).
prim(p794/2).
prim(p283/2).
prim(p392/2).
prim(p546/2).
prim(p7/2).
prim(p19/2).
prim(p29/2).
prim(p41/2).
prim(p42/2).
prim(p46/2).
prim(p49/2).
prim(p54/2).
prim(p66/2).
prim(p80/2).
prim(p82/2).
prim(p87/2).
prim(p92/2).
prim(p98/2).
prim(p152/2).
prim(p157/2).
prim(p172/2).
prim(p197/2).
prim(p203/2).
prim(p214/2).
prim(p220/2).
prim(p244/2).
prim(p246/2).
prim(p248/2).
prim(p252/2).
prim(p260/2).
prim(p263/2).
prim(p269/2).
prim(p273/2).
prim(p287/2).
prim(p295/2).
prim(p299/2).
prim(p307/2).
prim(p308/2).
prim(p310/2).
prim(p323/2).
prim(p327/2).
prim(p349/2).
prim(p351/2).
prim(p363/2).
prim(p365/2).
prim(p418/2).
prim(p434/2).
prim(p463/2).
prim(p470/2).
prim(p481/2).
prim(p523/2).
prim(p536/2).
prim(p541/2).
prim(p557/2).
prim(p563/2).
prim(p571/2).
prim(p576/2).
prim(p583/2).
prim(p584/2).
prim(p590/2).
prim(p610/2).
prim(p650/2).
prim(p662/2).
prim(p669/2).
prim(p689/2).
prim(p713/2).
prim(p718/2).
prim(p732/2).
prim(p737/2).
prim(p737/2).
prim(p765/2).
prim(p784/2).
prim(p785/2).
prim(p174/2).
prim(p420/2).
prim(p660/2).
prim(p759/2).
prim(p298/2).
prim(p298/2).
prim(p755/2).
prim(p755/2).
prim(p776/2).
prim(p776/2).
prim(p355/2).
prim(p355/2).

metarule(precon,[P/2,Q/1,R/2],([P,A,B]:-[[Q,A],[R,A,B]])).
metarule(postcon,[P/2,Q/2,R/1],([P,A,B]:-[[Q,A,B],[R,B]])).
metarule(chain,[P/2,Q/2,R/2],([P,A,B]:-[[Q,A,C],[R,C,B]])).
metarule(tailrec,[P/2,Q/2],([P,A,B]:-[[Q,A,C],[P,C,B]])).
%% metarule(curry3,[P/2,Q/3,C/0],([P,A,B]:-[[Q,A,B,C]])).

  
a:-
    cpus(CPU_COUNT),
    set_prolog_flag(cpu_count,CPU_COUNT),
    games(Games),
    playgol(Games),
    b,
    halt.

b:-
    cpus(CPU_COUNT),
    set_prolog_flag(cpu_count,CPU_COUNT),
    %get_time(T),
    %stamp_date_time(T, date(DY,DM,DD,TH,TM,TS,_,_,_), 'UTC'),
    %format('% started solving build tasks at ~w ~w ~w ~w:~w:~w\n', [DD, DM, DY, TH, TM, TS]),
    max_build_depth(BuildDepth),
    playgol:update_depth(BuildDepth),
    max_build_time(BuildTime),
    retractall(max_time(_)),
    assert(max_time(BuildTime)),
    tasks(Tasks),
    learn_tasks(Tasks,Progs),
    length(Progs,N),
    format('% num solved ~w\n',[N]),
    %get_time(T2),
    %stamp_date_time(T2, date(DY2,DM2,DD2,TH2,TM2,TS2,_,_,_), 'UTC'),
    %format('% finished solving build tasks at ~w ~w ~w ~w:~w:~w\n', [DD2, DM2, DY2, TH2, TM2, TS2]),
    halt.

learn_tasks(Tasks,Progs):-
    concurrent_maplist(learn_aux,Tasks,Xs),
    findall(true,member(true,Xs),Progs).

learn_aux(T,true):-
    train_examples(T,Pos,Neg),
    max_time(MaxTime),
    get_time(TTT),
    stamp_date_time(TTT, date(DY,DM,DD,TH,TM,TS,_,_,_), 'UTC'),
    format('% started solving build task at ~w ~w ~w ~w:~w:~w\n', [DD, DM, DY, TH, TM, TS]),
    catch(call_with_time_limit(MaxTime,learn(Pos,Neg,Prog)),time_limit_exceeded,(writeln('%timeout'),false)),!,
    get_time(TTT2),
    stamp_date_time(TTT2, date(DY2,DM2,DD2,TH2,TM2,TS2,_,_,_), 'UTC'),
    format('% finished solving build tasks at ~w ~w ~w ~w:~w:~w\n', [DD2, DM2, DY2, TH2, TM2, TS2]),
    pprint(Prog).
learn_aux(_,false).

do_test:-
    tasks(Tasks),
    maplist(do_test,Tasks),
    halt.

do_test(Task):-
    test_examples(Task,Pos),
    (current_predicate(Task/2) ->
        (
            format('%solved,~w,~w\n',[Task,1]),
            forall(member(X,Pos),(call(X) -> format('~w,~w\n',[1,1]); format('~w,~w\n',[1,0])))
        );
        (
            format('%solved,~w,~w\n',[Task,0]),
            forall(member(_,Pos),format('~w,~w\n',[0,0]))
        )).

gen_e(Task,Input,Output,Out):-
    Out=..[Task,s(Input,Output),s(_,[])].

play_examples(Task,Pos,[]):-
    findall(X,(play_pos(Task,A,B),gen_e(Task,A,B,X)),Pos1),
    sort_examples(Pos1,Pos).

train_examples(Task,Pos,[]):-
    findall(X,(build_pos(Task,A,B),gen_e(Task,A,B,X)),Pos1),
    sort_examples(Pos1,Pos).

test_examples(Task,Pos):-
    findall(X,(test_pos(Task,A,B),gen_e(Task,A,B,X)),Pos).

add_len(Atom,Len-Atom):-
    Atom=..[_Task,s(Input,_Output),s(_,[])],
    length(Input,Len).
remove_len(_-Atom,Atom).

sort_examples(L1,L2):-
  maplist(add_len,L1,L3),
  keysort(L3,L4),
  maplist(remove_len,L4,L2).

